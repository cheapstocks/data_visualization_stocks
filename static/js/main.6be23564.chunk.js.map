{"version":3,"sources":["utils.tsx","template/listitems.js","template/Title.js","template/Chart.js","template/Dashboard.js","index.tsx","Dividends.tsx","HistoricalPrice.tsx","MarketAnalysis.tsx"],"names":["URL","window","location","origin","download_data","market","ticker","path","fetch","method","then","response","json","data","catch","error","console","get_info","log","mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","Title","props","Typography","component","variant","color","gutterBottom","children","createData","time","amount","undefined","Chart","theme","useTheme","Fragment","ResponsiveContainer","LineChart","margin","top","right","bottom","left","XAxis","dataKey","stroke","palette","text","secondary","YAxis","Label","angle","position","style","textAnchor","fill","Line","type","main","dot","useStyles","makeStyles","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","classes","React","useState","open","setOpen","fixedHeightPaper","clsx","className","CssBaseline","AppBar","Toolbar","IconButton","edge","onClick","noWrap","Drawer","Divider","List","Container","maxWidth","Grid","item","xs","md","lg","Paper","render","exact","setData","currency","setCurrency","params","useParams","useEffect","id","dividends","d","Date","push","x","toLocaleDateString","y","Dividends","tickFormatter","Tooltip","Legend","name","prices","Close","newArray","map","pc","Number","dividendRate","toFixed","sort","a","b","Treemap","aspectRatio","document","getElementById"],"mappings":"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","file":"static/js/main.6be23564.chunk.js","sourcesContent":["import { DividendsEntity, HistoricalPriceEntity, Info } from \"./models\";\n\nconst URL = window.location.origin\nconst DIVIDENDS = \"dividends\"\nconst INFO = \"info\"\nconst PRICES = \"prices\"\n\nfunction download_data(market: string, ticker: string, path: string) {\n\n  return fetch(`${URL}/data/${market}/${path}/${ticker}.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_dividends(market: string, ticker: string): Promise<void | DividendsEntity[] | null | undefined> {\n  return download_data(market, ticker, DIVIDENDS)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_historical_price(market: string, ticker: string): Promise<void | HistoricalPriceEntity[] | null | undefined> {\n  return download_data(market, ticker, PRICES)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_info(market: string, ticker: string): Promise<void | Info | null | undefined> {\n  return download_data(market, ticker, INFO)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_tickers(market: string): Promise<void | string[] | null | undefined> {\n\n  return fetch(`${URL}/data/${market}/tickers`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_dividends_rate(market: string): Promise<void | {ticker: string, dividendRate: number}[] | null | undefined> {\n\n  return fetch(`${URL}/data/${market}/dividendsRate`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Orders\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Customers\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Reports\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Integrations\" />\n    </ListItem>\n  </div>\n);\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('00:00', 0),\n  createData('03:00', 300),\n  createData('06:00', 600),\n  createData('09:00', 800),\n  createData('12:00', 1500),\n  createData('15:00', 2000),\n  createData('18:00', 2400),\n  createData('21:00', 2400),\n  createData('24:00', undefined),\n];\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  return (\n    <React.Fragment>\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Sales ($)\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { mainListItems } from './listitems.js';\nimport Chart from './Chart';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\n\nexport default function Dashboard(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Dashboard\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <Chart />\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport DividensChart from './Dividends';\nimport HistoricalPrice from './HistoricalPrice';\nimport MarketAnalysis from './MarketAnalysis';\nimport { HashRouter as Router, Switch, Route, } from \"react-router-dom\";\nimport Dashboard from './template/Dashboard';\nrender(\n  <React.Fragment>\n    <Dashboard>\n      <Router >\n        <Switch>\n          <Route exact path=\"/dividends/:market/:id\" component={DividensChart} />\n          <Route exact path=\"/price/:market/:id\" component={HistoricalPrice} />\n          <Route exact path=\"/market/:market\" component={MarketAnalysis} />\n        </Switch>\n      </Router>\n    </Dashboard>\n  </React.Fragment>,\n  document.getElementById('root'),\n);","import React, { useState, useEffect } from 'react';\nimport { DividendsEntity, Info } from \"./models\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { get_dividends, get_info } from './utils';\nimport { useParams } from 'react-router-dom';\n\nexport default function DividensChart() {\n  const [data, setData] = useState<{ x: string, y: number }[]>([]);\n  const [currency, setCurrency] = useState<string>(\"$\");\n  const params: { market: string, id: string } = useParams()\n\n  useEffect(() => {\n    get_dividends(params.market, params.id).then(response => {\n      let dividends = response as DividendsEntity[]\n      var data = []\n      // convert date\n      for (let item of dividends) {\n        let d = new Date(item.Date)\n        data.push({\n          x: d.toLocaleDateString(),\n          y: item.Dividends,\n        })\n      }\n      setData(data)\n    })\n    get_info(params.market, params.id).then(response => {\n      let info = response as Info\n      setCurrency(info.currency)\n    })\n  }, [params.id, params.market])\n\n\n  return (\n    <div style={{ width: 800, height: 600 }}>\n      <ResponsiveContainer>\n        <LineChart\n          width={500}\n          height={300}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          }}\n        >\n          <XAxis dataKey=\"x\" />\n          <YAxis tickFormatter={d => `${currency} ${d}`} />\n          <Tooltip />\n          <Legend />\n          <Line\n            type=\"monotone\"\n            dataKey=\"y\"\n            name=\"Dividends\"\n            stroke=\"#8884d8\"\n            dot={false}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport { HistoricalPriceEntity, Info } from \"./models\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { get_historical_price, get_info } from './utils';\nimport { useParams } from 'react-router-dom';\n\nexport default function HistoricalPrice() {\n  const [data, setData] = useState<{ x: string, y: number }[]>([]);\n  const [currency, setCurrency] = useState<string>(\"$\");\n  const params = useParams<{ id: string, market: string }>();\n\n  useEffect(() => {\n    get_historical_price(params.market, params.id).then(response => {\n      let prices = response as HistoricalPriceEntity[]\n      var data = []\n      // convert date\n      for (let item of prices) {\n        let d = new Date(item.Date)\n        data.push({\n          x: d.toLocaleDateString(),\n          y: item.Close,\n        })\n      }\n      setData(data)\n    })\n\n    get_info(params.market, params.id).then(response => {\n      let info = response as Info\n      setCurrency(info.currency)\n    })\n  }, [params.id, params.market])\n\n  return (\n    <div style={{ width: 800, height: 600 }}>\n      <ResponsiveContainer>\n        <LineChart\n          width={800}\n          height={600}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          }}\n        >\n          <XAxis dataKey=\"x\" />\n          <YAxis tickFormatter={d => `${currency} ${d}`} />\n          <Tooltip />\n          <Legend />\n          <Line\n            type=\"monotone\"\n            dataKey=\"y\"\n            name=\"Historical Price\"\n            stroke=\"#8884d8\"\n            dot={false}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport { ResponsiveContainer, Treemap } from 'recharts';\nimport { get_dividends_rate } from './utils';\nimport { useParams } from 'react-router-dom';\n\nexport default function MarketAnalysis() {\n  const [data, setData] = useState<{ name: string, dividends: number }[]>([]);\n  const params: { market: string } = useParams()\n\n  useEffect(() => {\n    get_dividends_rate(params.market).then(response => {\n      let info = response as { ticker: string; dividendRate: number }[]\n      const newArray = info.map(item => {\n        let pc = Number((item.dividendRate * 100).toFixed(2))\n        return { name: `${item.ticker} ${pc}%`, dividends: pc };\n      });\n\n      setData(newArray.sort(function (a, b) {\n        var x = a[\"dividends\"]; var y = b[\"dividends\"];\n        return ((x > y) ? -1 : ((x < y) ? 1 : 0));\n      }))\n    })\n  }, [params.market])\n\n  return (\n    <div style={{ width: 800, height: 600 }}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <Treemap width={400} height={200} data={data} dataKey=\"dividends\" aspectRatio={4 / 3} stroke=\"#fff\" fill=\"#8884d8\" />\n      </ResponsiveContainer>\n    </div>\n  )\n}"],"sourceRoot":""}