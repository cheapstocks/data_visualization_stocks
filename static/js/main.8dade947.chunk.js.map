{"version":3,"sources":["template/listitems.js","template/Dashboard.js","template/Title.js","template/CustomGrid.js","utils.tsx","MarketDividends.tsx","MarketAnalysis.tsx","index.tsx","Dividends.tsx","Market.tsx"],"names":["mainListItems","ListItem","button","component","Link","href","ListItemIcon","code","height","ListItemText","primary","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","title","flexGrow","width","flexShrink","drawerPaper","drawerContainer","overflow","appBarSpacer","content","container","paddingTop","spacing","paddingBottom","URL","window","location","origin","Dashboard","props","classes","className","CssBaseline","AppBar","position","clsx","Toolbar","Typography","variant","color","noWrap","Drawer","paper","Divider","List","Container","Grid","children","Title","gutterBottom","flexDirection","fixedHeight","CustomGrid","fixedHeightPaper","item","xs","Paper","download_data","market","ticker","path","fetch","method","then","response","json","data","catch","error","console","get_peers","input","INITIAL_LIMITS","CustomTooltip","aaa","a","payload","name","dividendsRatio","category","valuetext","value","createStyles","margin","priceEarningsRatio","render","Fragment","exact","useState","setData","currency","setCurrency","params","useParams","useTheme","useEffect","id","log","dividends","index","currentYear","Date","date","getFullYear","nextYear","toString","adjustedAmount","splice","length","ResponsiveContainer","LineChart","top","right","left","bottom","XAxis","dataKey","tickFormatter","d","stroke","palette","text","secondary","YAxis","Tooltip","Legend","Line","type","main","dot","style","fontSize","dividendRate","setDividendRate","peers","setPeers","React","dividendsInterval","setDividendsInterval","useMemo","undefined","peerGroup","find","group","includes","companyAsPeer","companyPeer","symbol","info","finnhubIndustry","ScatterChart","unit","domain","allowDataOverflow","Scatter","fill","Slider","onChange","event","newValue","valueLabelDisplay","getAriaValueText","peRatio","setPeRate","limit","setLimit","track","document","getElementById"],"mappings":"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","file":"static/js/main.8dade947.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Flag from 'react-world-flags'\nimport Link from '@material-ui/core/Link';\n\n\nexport const mainListItems = (\n  <div>\n    <ListItem button component={Link} href=\"/#/market/ST\">\n      <ListItemIcon>\n        <Flag code=\"swe\" height=\"16\" />\n      </ListItemIcon>\n      <ListItemText primary=\"Sweden\" />\n    </ListItem>\n    <ListItem button component={Link} href=\"/#/market/CO\">\n      <ListItemIcon>\n        <Flag code=\"dnk\" height=\"16\" />\n      </ListItemIcon>\n      <ListItemText primary=\"Denmark\" />\n    </ListItem>\n    <ListItem button component={Link} href=\"/#/market/HE\">\n      <ListItemIcon>\n        <Flag code=\"fin\" height=\"16\" />\n      </ListItemIcon>\n      <ListItemText primary=\"Finland\" />\n    </ListItem>\n  </div>\n);\n\n\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { mainListItems } from './listitems.js';\n\n\nconst drawerWidth = 180;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\n\nconst URL = window.location.origin\n\nexport default function Dashboard(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar)}>\n        <Toolbar className={classes.toolbar}>\n          <Typography component=\"h1\" href={URL} variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Visualizing Stocks\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{ paper: clsx(classes.drawerPaper) }}>\n        <Toolbar />\n        <Divider />\n        <div className={classes.drawerContainer}>\n          <List>{mainListItems}</List>\n        </div>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container className={classes.container}>\n          <Grid container spacing={3}>\n            {props.children}\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      height: 540,\n    },\n  }));\n  \n\nexport default function CustomGrid(props) {\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n      <Grid item xs={12}>\n        <Paper className={fixedHeightPaper}>\n          {props.children}\n        </Paper>\n      </Grid>\n    );\n  }\n  ","import { Dividend, CompanyProfile, StockMetric, MarketSymbols, PriceEarningsRatio, DividendsRatio, CompanyPeers} from \"./models\";\n\nconst URL = \"https://api.cheapstocks.app\"\nconst DIVIDENDS = \"dividends\"\nconst INFO = \"info\"\nconst METRICS = \"metrics\"\n\nfunction download_data(market: string, ticker: string, path: string) {\n\n  return fetch(`${URL}/markets/${market}/${path}/${ticker}.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_dividends(market: string, ticker: string): Promise<void | Dividend[] | null | undefined> {\n  return download_data(market, ticker, DIVIDENDS)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_info(market: string, ticker: string): Promise<void | CompanyProfile | null | undefined> {\n  return download_data(market, ticker, INFO)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_tickers(market: string): Promise<void | MarketSymbols[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/tickers.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_dividends_rate(market: string): Promise<void | DividendsRatio[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/dividendsRate.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_stock_metrics(market: string, ticker: string): Promise<void | StockMetric[] | null | undefined> {\n\n  return download_data(market, ticker, METRICS)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_pe_rate(market: string): Promise<void | PriceEarningsRatio[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/priceEarningComparison.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_peers(market: string): Promise<void | CompanyPeers[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/peers.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}","import React, { useState, useEffect, useMemo } from 'react';\nimport { ResponsiveContainer, Scatter, ScatterChart, Tooltip, XAxis, YAxis } from 'recharts';\nimport { get_dividends_rate, get_peers } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport { CompanyPeers } from './models';\nimport CustomGrid from './template/CustomGrid';\nimport { makeStyles, Slider, Typography } from '@material-ui/core';\n\nexport interface DR {\n  name: string,\n  dividendsRatio: number\n  category: string\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n  },\n  input: {\n    width: 42,\n  },\n});\n\nconst INITIAL_LIMITS = [5, 25]\n\nexport default function MarketDividends() {\n  const [dividendRate, setDividendRate] = useState<DR[]>([]);\n  const [peers, setPeers] = useState<CompanyPeers[]>([]);\n  const params: { market: string } = useParams()\n  const classes = useStyles();\n  const [dividendsInterval, setDividendsInterval] = React.useState<number[]>(INITIAL_LIMITS);\n\n  const handleChange = (event: any, newValue: number | number[]) => {\n    setDividendsInterval(newValue as number[]);\n  };\n\n  useEffect(() => {\n    get_dividends_rate(params.market).then(response => {\n      let info = response as DR[]\n      setDividendRate(info)\n    })\n\n    get_peers(params.market).then(response => {\n      let info = response as CompanyPeers[]\n      setPeers(info)\n    })\n  }, [params.market])\n\n\n  useMemo(() => {\n    // add category for companies\n    for (let index = 0; index < dividendRate.length; index++){\n      // find companies and add finnhub industry\n      var peerGroup = peers.find(group => group.group.includes(dividendRate[index].name))\n      \n      if (peerGroup === undefined ){\n        continue\n      }\n\n      var companyAsPeer = peerGroup.peers.find(companyPeer => companyPeer.symbol === dividendRate[index].name)\n\n      if (companyAsPeer === undefined ){\n        continue\n      }\n      dividendRate[index].category = companyAsPeer?.info.finnhubIndustry\n    }\n\n  }, [dividendRate, peers]);\n\n  return (\n    <CustomGrid>\n      <Title>{params.market} biggest dividends</Title>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <ScatterChart\n          width={400}\n          height={400}\n          margin={{\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 20,\n          }}\n        >\n          <XAxis type=\"category\" dataKey=\"category\" />\n          <YAxis type=\"number\" dataKey=\"dividendsRatio\" name=\"ratio\" unit=\"%\" domain={dividendsInterval} allowDataOverflow={true}  />\n          <Tooltip content={<CustomTooltip />} />\n          <Scatter name=\"A school\" data={dividendRate} fill=\"#8884d8\">\n          </Scatter>\n        </ScatterChart>\n      </ResponsiveContainer>\n\n      <div className={classes.root}>\n      <Typography id=\"range-slider\" gutterBottom>\n        Dividends Range\n      </Typography>\n      <Slider\n        value={dividendsInterval}\n        onChange={handleChange}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby=\"range-slider\"\n        getAriaValueText={valuetext}\n      />\n    </div>\n    </CustomGrid>\n  )\n}\n\nfunction CustomTooltip(props: any, aaa: {}) {\n  let a = props as { payload: { payload: { name: string, dividendsRatio: number, category:string } }[] }\n\n  if ((a == null) || (a.payload == null) || (a.payload[0] == null)) {\n    return null\n  }\n  return (\n    <div className=\"custom-tooltip\">\n      <p className=\"label\">Name: {`${a.payload[0].payload.name}`}</p>\n      <p className=\"intro\">Dividend/Price ratio: {`${a.payload[0].payload.dividendsRatio}%`}</p>\n      <p className=\"intro\">Category: {`${a.payload[0].payload.category}`}</p>\n\n    </div>\n  );\n};\n\nfunction valuetext(value: number) {\n  return `${value}%`;\n}","import React, { useState, useEffect, useMemo } from 'react';\nimport { ResponsiveContainer, Scatter, ScatterChart, Tooltip, XAxis, YAxis } from 'recharts';\nimport { get_peers, get_pe_rate } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport CustomGrid from './template/CustomGrid';\nimport { CompanyPeers } from './models';\nimport { createStyles, makeStyles, Slider, Theme, Typography } from '@material-ui/core';\n\n\nexport interface PER {\n  name: string,\n  priceEarningsRatio: number\n  category: string\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: 250,\n    },\n    margin: {\n      height: theme.spacing(3),\n    },\n  }),\n);\n\n// change this dinamically\nconst THRESHOLD = 20\n\nexport default function MarketAnalysis() {\n  const [peRatio, setPeRate] = useState<PER[]>([]);\n  const [peers, setPeers] = useState<CompanyPeers[]>([]);\n  const params: { market: string } = useParams()\n  const [limit, setLimit] = useState<number>(THRESHOLD);\n\n  const handleChange = (event: any, value: number | number[]) => {\n    if (typeof (value) === \"number\") {\n      setLimit(value)\n    }\n  };\n\n  useEffect(() => {\n    get_pe_rate(params.market).then(response => {\n      let info = response as PER[]\n      setPeRate(info)\n    })\n\n    get_peers(params.market).then(response => {\n      let info = response as CompanyPeers[]\n      setPeers(info)\n    })\n  }, [params.market])\n\n  useMemo(() => {\n    // add category for companies\n    for (let index = 0; index < peRatio.length; index++) {\n      // find companies and add finnhub industry\n      var peerGroup = peers.find(group => group.group.includes(peRatio[index].name))\n\n      if (peerGroup === undefined) {\n        continue\n      }\n\n      var companyAsPeer = peerGroup.peers.find(companyPeer => companyPeer.symbol === peRatio[index].name)\n\n      if (companyAsPeer === undefined) {\n        continue\n      }\n      peRatio[index].category = companyAsPeer?.info.finnhubIndustry\n    }\n\n  }, [peRatio, peers]);\n\n  const classes = useStyles();\n\n  return (\n    <CustomGrid>\n      <Title>{params.market} smallest P/E</Title>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <ScatterChart\n          width={400}\n          height={400}\n          margin={{\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 20,\n          }}\n        >\n          <XAxis type=\"category\" dataKey=\"category\" />\n          <YAxis type=\"number\" dataKey=\"priceEarningsRatio\" name=\"ratio\" unit=\"%\" domain={[0, limit]} allowDataOverflow={true} />\n          <Tooltip content={<CustomTooltip />} />\n          <Scatter name=\"A school\" data={peRatio} fill=\"#8884d8\" />\n        </ScatterChart>\n      </ResponsiveContainer>\n      <div className={classes.root}>\n        <Typography id=\"track-inverted-slider\" gutterBottom>\n          Max P/E ratio\n        </Typography>\n        <Slider\n          track=\"inverted\"\n          aria-labelledby=\"track-inverted-slider\"\n          getAriaValueText={valuetext}\n          value={limit}\n          onChange={handleChange}\n          valueLabelDisplay=\"auto\"\n        />\n      </div>\n    </CustomGrid>\n  )\n}\n\nfunction CustomTooltip(props: any, aaa: {}) {\n  let a = props as { payload: { payload: { name: string, priceEarningsRatio: number, category: string } }[] }\n\n  if ((a == null) || (a.payload == null) || (a.payload[0] == null)) {\n    return null\n  }\n  return (\n    <div className=\"custom-tooltip\">\n      <p className=\"label\">Name: {`${a.payload[0].payload.name}`}</p>\n      <p className=\"intro\">P/E Ratio: {`${a.payload[0].payload.priceEarningsRatio}%`}</p>\n      <p className=\"intro\">Category: {`${a.payload[0].payload.category}`}</p>\n\n    </div>\n  );\n};\n\nfunction valuetext(value: number) {\n  return `${value}%`;\n}","import React from 'react';\nimport { render } from 'react-dom';\nimport { HashRouter as Router, Switch, Route, } from \"react-router-dom\";\n\nimport Dashboard from './template/Dashboard';\nimport Market from './Market';\nimport DividensChart from './Dividends';\nimport MarketDividends from './MarketDividends';\nimport MarketAnalysis from './MarketAnalysis';\n\nrender(\n  <React.Fragment>\n    <Dashboard>\n      <Router >\n        <Switch>\n          <Route exact path=\"/market/:market/dividends/:id\" component={DividensChart} />\n          <Route exact path=\"/market/:market\" component={Market} />\n          <Route exact path=\"/market/:market/dividends\" component={MarketDividends} />\n          <Route exact path=\"/market/:market/analysis\" component={MarketAnalysis} />\n        </Switch>\n      </Router>\n    </Dashboard>\n  </React.Fragment>,\n  document.getElementById('root'),\n);","import React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Dividend } from \"./models\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { get_dividends } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport CustomGrid from './template/CustomGrid';\n\nexport default function DividensChart() {\n  const [data, setData] = useState<Dividend[]>([]);\n  const [currency, setCurrency] = useState<string>(\"$\");\n  const params: { market: string, id: string } = useParams()\n  const theme = useTheme()\n\n  useEffect(() => {\n    get_dividends(params.market, params.id).then(response => {\n      let dividends = response as Dividend[]\n      let index = 0\n      while (typeof dividends[index + 1] !== 'undefined') {\n        let currentYear = new Date(dividends[index].date).getFullYear()\n        let nextYear = new Date(dividends[index + 1].date).getFullYear()\n        dividends[index].date = currentYear.toString()\n        if (currentYear === nextYear) {\n          dividends[index].adjustedAmount = dividends[index].adjustedAmount + dividends[index + 1].adjustedAmount\n          dividends.splice(index + 1, 1);\n        }\n        index = index + 1\n      }\n      setData(dividends)\n\n      if (dividends.length > 0) {\n        setCurrency(dividends[0].currency)\n      }\n\n    })\n  }, [params.id, params.market])\n\n\n  return (\n      <CustomGrid>\n        <Title>{params.id} dividends historical</Title>\n        <ResponsiveContainer>\n          <LineChart\n            width={500}\n            height={300}\n            data={data}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5\n            }}\n          >\n            <XAxis dataKey=\"date\" tickFormatter={d => `${new Date(d).getFullYear().toString()}`} stroke={theme.palette.text.secondary} />\n            <YAxis dataKey=\"adjustedAmount\" tickFormatter={d => `${currency} ${d}`} stroke={theme.palette.text.secondary} />\n            <Tooltip />\n            <Legend />\n            <Line\n              type=\"monotone\"\n              dataKey=\"adjustedAmount\"\n              name=\"Dividends\"\n              stroke={theme.palette.primary.main}\n              dot={false}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </CustomGrid>)\n}","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport CustomGrid from './template/CustomGrid';\nimport { Grid, Link, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport { ResponsiveContainer } from 'recharts';\n\n\nexport default function Market() {\n    const params: { market: string } = useParams()\n\n    return (\n        <CustomGrid>\n            <Title>{params.market} market insights</Title>\n            <ResponsiveContainer>\n                <Grid container >\n                    <Grid item xs>\n                        <ListItem button component={Link} href={`/#/market/${params.market}/dividends`}>\n                            <ListItemIcon>\n                                <MonetizationOnIcon style={{ fontSize: 120 }} />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Dividends\" />\n                        </ListItem>\n                    </Grid >\n                    <Grid item xs>\n                        <ListItem button component={Link} href={`/#/market/${params.market}/analysis`}>\n                            <ListItemIcon>\n                                <TrendingUpIcon style={{ fontSize: 120 }} />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Cheap Value Stocks\" />\n                        </ListItem>\n                    </Grid >\n                </Grid >\n            </ResponsiveContainer>\n        </CustomGrid>)\n}"],"sourceRoot":""}