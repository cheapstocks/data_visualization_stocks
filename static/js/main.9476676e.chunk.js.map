{"version":3,"sources":["template/listitems.js","utils.tsx","template/Dashboard.js","template/Title.js","template/CustomGrid.js","MarketDividends.tsx","MarketAnalysis.tsx","MarketDCF.tsx","index.tsx","Dividends.tsx","Market.tsx","MarketSectorAnalysis.tsx","Stock.tsx"],"names":["mainListItems","ListItem","button","component","Link","href","ListItemIcon","code","height","ListItemText","primary","URL","download_data","market","ticker","path","fetch","method","then","response","json","data","catch","error","console","get_key_metrics","period","sort","a","b","date","log","get_metrics","useStyles","makeStyles","theme","root","display","toolbarIcon","alignItems","justifyContent","padding","mixins","toolbar","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","title","flexGrow","width","flexShrink","drawerPaper","drawerContainer","overflow","appBarSpacer","content","container","paddingTop","spacing","paddingBottom","window","location","origin","Dashboard","props","useState","open","setOpen","symbols","setSymbols","classes","useMemo","resp","className","CssBaseline","AppBar","position","clsx","Toolbar","Typography","variant","color","noWrap","Autocomplete","autoHighlight","id","style","backgroundColor","onOpen","onClose","getOptionSelected","option","value","getOptionLabel","symbol","name","options","onChange","event","newValue","undefined","str","split","length","redirect","renderInput","params","TextField","label","InputProps","Drawer","paper","Divider","List","Container","children","Title","gutterBottom","flexDirection","fixedHeight","CustomGrid","fixedHeightPaper","Grid","item","xs","Paper","input","INITIAL_LIMITS","CustomTooltip","aaa","payload","elevation","dividendsRatio","toFixed","category","valuetext","createStyles","margin","render","Fragment","exact","keyMetrics","setKeyMetrics","useParams","useTheme","useEffect","ResponsiveContainer","LineChart","top","right","left","bottom","XAxis","dataKey","tickFormatter","d","Date","getFullYear","toString","stroke","palette","text","secondary","YAxis","Tooltip","formatter","Legend","Line","type","main","dot","fontSize","Money","dividendRate","setDividendRate","peers","setPeers","React","dividendsInterval","setDividendsInterval","get_peers","index","peerGroup","find","group","includes","companyAsPeer","companyPeer","industry","ScatterChart","allowDuplicatedCategory","unit","domain","allowDataOverflow","Scatter","fill","onClick","ev","redirectStock","Slider","valueLabelDisplay","getAriaValueText","peRatio","setPeRate","peRatioIndex","setPeRatioIndex","limit","setLimit","info","_peNormalizedAnnual","i","GetComparison","averageData","_grossMarginTTM","_netProfitMarginTTM","_roeTTM","debtNetIncomeRatio","enterpriseValueMultipleTTM","minTickGap","Label","offset","slice","track","selectedPeRatio","setSelectedPeRatio","setIndustry","industries","setIndustries","lotOfIndustries","push","select","multiple","placeholder","LabelList","ReferenceLine","y","x","dcfRatio","ratio","price","target_price","companyProfile","setcompanyProfile","dcf","setDCF","MetricsGraph","hide","strokeWidth","stock","get_dcf","companyName","description","document","getElementById"],"mappings":"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","file":"static/js/main.9476676e.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Flag from 'react-world-flags'\nimport Link from '@material-ui/core/Link';\n\n\nexport const mainListItems = (\n  <div>\n    <ListItem button component={Link} href=\"/#/market/US\">\n      <ListItemIcon>\n        <Flag code=\"us\" height=\"16\" />\n      </ListItemIcon>\n      <ListItemText primary=\"United States\" />\n    </ListItem>\n  </div>\n);\n\n\n","import { CompanyProfile, StockMetric, MarketSymbols, GeneralMetrics, DividendsRatio, CompanyPeers, KeyMetrics, DCFRatio, DCF, HistoricalPrice } from \"./models\";\n\nconst URL = \"https://api.cheapstocks.app\"\nconst INFO = \"info\"\nconst METRICS = \"metrics\"\nconst KEY_METRICS = \"key-metrics\"\n\nfunction download_data(market: string, ticker: string, path: string) {\n\n  return fetch(`${URL}/markets/${market}/${path}/${ticker}.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_info(market: string, ticker: string): Promise<void | CompanyProfile | null | undefined> {\n  return download_data(market, ticker, INFO)\n    .then(response => {\n      if (response != null) {\n        let resp = response as CompanyProfile[]\n        return resp[0]\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_market_tickers(market: string): Promise<void | MarketSymbols[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/tickers.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_all_tickers(): Promise<void | MarketSymbols[] | null | undefined> {\n\n  return fetch(`${URL}/markets/tickers.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_dividends_rate(market: string): Promise<void | DividendsRatio[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/dividendsRate.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_key_metrics(market: string, ticker: string, period: string): Promise<void | KeyMetrics[] | null | undefined> {\n\n  return download_data(market, ticker, `${KEY_METRICS}/${period}`)\n    .then(response => {\n      if (response != null) {\n        response.sort((a: KeyMetrics, b: KeyMetrics) => {\n          if (a.date < b.date) {\n            return -1;\n          }\n          if (a.date > b.date) {\n            return 1;\n          }\n          return 0;\n        });\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_stock_metrics(market: string, ticker: string): Promise<void | StockMetric | null | undefined> {\n\n  return download_data(market, ticker, METRICS)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_metrics(market: string): Promise<void | GeneralMetrics[] | null | undefined> {\n  return fetch(`${URL}/markets/${market}/general_metrics.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_peers(market: string): Promise<void | CompanyPeers[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/peers.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_markets(): Promise<void | string[] | null | undefined> {\n\n  return fetch(`${URL}/markets.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_all_symbols(): Promise<string[]> {\n  return fetch(`${URL}/markets/symbols.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_dcf_ratio(market: string): Promise<void | DCFRatio[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/dcf.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_dcf(market: string, symbol: string): Promise<void | DCF | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/dcf/${symbol}.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_historical_price(market: string, symbol: string): Promise<void | HistoricalPrice | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/historical_price/${symbol}.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}","import { React, useState, useMemo } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Container from '@material-ui/core/Container';\nimport { mainListItems } from './listitems.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport { get_all_tickers } from '../utils.tsx';\n\nconst drawerWidth = 180;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\n\nconst URL = window.location.origin\n\nfunction redirect(event) {\n  if ( event?.symbol === undefined) {\n    return\n  }\n\n  let str = event?.symbol.split(\".\")\n  let market = \"US\"\n  if (str.length > 1){\n    market = str[1]\n  }\n\n  window.location.href = `/#/market/${market}/${str[0]}`\n}\n\nexport default function Dashboard(props) {\n  const [open, setOpen] = useState(false);\n  const [symbols, setSymbols] = useState([]);\n  const classes = useStyles();\n\n  useMemo(() => {\n    // download markets\n    get_all_tickers().then(resp => {\n      setSymbols(resp)\n    })\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar)}>\n        <Toolbar>\n          <Typography component=\"h1\" href={URL} variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Visualizing Stocks\n          </Typography>\n          <Autocomplete\n            autoHighlight\n            id=\"stocks_search\"\n            style={{ width: '30%', backgroundColor: '#FFFFFF', height: '30%' }}\n            open={open}\n            onOpen={() => { setOpen(true) }}\n            onClose={() => { setOpen(false) }}\n            getOptionSelected={(option, value) => option === value}\n            getOptionLabel={option => `${option?.symbol}: ${option?.name}`}\n            options={symbols}\n            onChange={(event, newValue) => {\n              redirect(newValue);\n            }}\n            renderInput={params => (\n              <TextField\n                {...params}\n                label=\"Search for stock, market\"\n                variant=\"outlined\"\n                InputProps={{\n                  ...params.InputProps,\n                }}\n              />\n            )} />\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{ paper: clsx(classes.drawerPaper) }}>\n        <Toolbar />\n        <Divider />\n        <div className={classes.drawerContainer}>\n          <List>{mainListItems}</List>\n        </div>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container className={classes.container}>\n          {props.children}\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 800,\n  },\n}));\n\n\nexport default function CustomGrid(props) {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Paper className={fixedHeightPaper}>\n          {props.children}\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { ResponsiveContainer, Scatter, ScatterChart, Tooltip, XAxis, YAxis } from 'recharts';\nimport { get_dividends_rate, get_peers } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport { CompanyPeers, DividendsRatio } from './models';\nimport CustomGrid from './template/CustomGrid';\nimport { makeStyles, Paper, Slider, Typography } from '@material-ui/core';\n\nexport interface DR extends DividendsRatio{\n  category: string\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n  },\n  input: {\n    width: 42,\n  },\n});\n\nconst INITIAL_LIMITS = [5, 25]\n\nexport default function MarketDividends() {\n  const [dividendRate, setDividendRate] = useState<DR[]>([]);\n  const [peers, setPeers] = useState<CompanyPeers[]>([]);\n  const params: { market: string } = useParams()\n  const classes = useStyles();\n  const [dividendsInterval, setDividendsInterval] = React.useState<number[]>(INITIAL_LIMITS);\n\n  const handleChange = (event: any, newValue: number | number[]) => {\n    setDividendsInterval(newValue as number[]);\n  };\n\n  useEffect(() => {\n    get_dividends_rate(params.market).then(response => {\n      let info = response as DR[]\n      setDividendRate(info)\n    })\n\n    get_peers(params.market).then(response => {\n      let info = response as CompanyPeers[]\n      setPeers(info)\n    })\n  }, [params.market])\n\n  function redirectStock(ev: any) {\n    if (ev?.name !== undefined) {\n      window.location.href = `/#/market/${params.market}/${ev.name}`\n    }\n  }\n\n  useMemo(() => {\n    // add category for companies\n    for (let index = 0; index < dividendRate.length; index++){\n      // find companies and add finnhub industry\n      var peerGroup = peers.find(group => group.group.includes(dividendRate[index].name))\n      \n      if (peerGroup === undefined ){\n        continue\n      }\n\n      var companyAsPeer = peerGroup.peers.find(companyPeer => companyPeer.symbol === dividendRate[index].name)\n\n      if (companyAsPeer === undefined ){\n        continue\n      }\n      dividendRate[index].category = companyAsPeer?.industry\n    }\n\n  }, [dividendRate, peers]);\n\n  return (\n    <CustomGrid>\n      <Title>{params.market} biggest dividends</Title>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <ScatterChart\n          width={400}\n          height={400}\n          margin={{\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 20,\n          }}\n        >\n          <XAxis type=\"category\" dataKey=\"category\" allowDuplicatedCategory={false} />\n          <YAxis type=\"number\" dataKey=\"dividendsRatio\" name=\"ratio\" unit=\"%\" domain={dividendsInterval} allowDataOverflow={true}  />\n          <Tooltip content={<CustomTooltip />} />\n          <Scatter name=\"A school\" data={dividendRate} fill=\"#8884d8\" onClick={ev => redirectStock(ev)}>\n          </Scatter>\n        </ScatterChart>\n      </ResponsiveContainer>\n\n      <div className={classes.root}>\n      <Typography id=\"range-slider\" gutterBottom>\n        Dividends Range\n      </Typography>\n      <Slider\n        value={dividendsInterval}\n        onChange={handleChange}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby=\"range-slider\"\n        getAriaValueText={valuetext}\n      />\n    </div>\n    </CustomGrid>\n  )\n}\n\nfunction CustomTooltip(props: any, aaa: {}) {\n  let a = props as { payload: { payload: { name: string, dividendsRatio: number, category:string } }[] }\n\n  if ((a == null) || (a.payload == null) || (a.payload[0] == null)) {\n    return null\n  }\n  return (\n    <Paper elevation={3} >\n      <p className=\"label\">Name: {`${a.payload[0].payload.name}`}</p>\n      <p className=\"intro\">Dividend/Price ratio: {`${a.payload[0].payload.dividendsRatio.toFixed(1)}%`}</p>\n      <p className=\"intro\">Category: {`${a.payload[0].payload.category}`}</p>\n    </Paper>\n  );\n};\n\nfunction valuetext(value: number) {\n  return `${value}%`;\n}","import React, { useState, useEffect, useMemo } from 'react';\nimport { Label, ResponsiveContainer, Scatter, ScatterChart, Tooltip, XAxis, YAxis } from 'recharts';\nimport { get_metrics } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport CustomGrid from './template/CustomGrid';\nimport { GeneralMetrics } from './models';\nimport { createStyles, makeStyles, Paper, Slider, Theme, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: 250,\n    },\n    margin: {\n      height: theme.spacing(3),\n    },\n  }),\n);\n\n// change this dinamically\nconst THRESHOLD = 20\n\nexport default function MarketAnalysis() {\n  const [peRatio, setPeRate] = useState<GeneralMetrics[]>([]);\n  const [peRatioIndex, setPeRatioIndex] = useState<number>(0);\n  const params: { market: string } = useParams()\n  const [limit, setLimit] = useState<number>(THRESHOLD);\n\n  const handleChange = (event: any, value: number | number[]) => {\n    if (typeof (value) === \"number\") {\n      setLimit(value)\n    }\n  };\n\n  useEffect(() => {\n    get_metrics(params.market).then(response => {\n      let info = response as GeneralMetrics[]\n\n      // sort list\n      function compare(a: GeneralMetrics, b: GeneralMetrics) {\n        if (a._peNormalizedAnnual < b._peNormalizedAnnual) {\n          return -1;\n        }\n        return 0;\n      }\n      info.sort(compare);\n      setPeRate(info)\n    })\n\n  }, [params.market])\n\n  function redirectStock(ev: any) {\n    if (ev?.name !== undefined) {\n      window.location.href = `/#/market/${params.market}/${ev.name}`\n    }\n  }\n\n  useMemo(() => {\n    // TODO: use binary search to find peRatio to cut\n    for (let i = 0; i < peRatio.length; i++) {\n      if ((peRatio[i]._peNormalizedAnnual >= limit) && (peRatio[i]._peNormalizedAnnual < (limit + 0.2))) {\n        setPeRatioIndex(i)\n        break\n      }\n    }\n\n  }, [limit, peRatio]);\n\n  const classes = useStyles();\n\n  function CustomTooltip(props: any, aaa: {}) {\n    let a = props as { payload: { payload: GeneralMetrics }[] }\n\n    if ((a == null) || (a.payload == null) || (a.payload[0] == null)) {\n      return null\n    }\n    let payload = a.payload[0].payload\n\n    return (\n      <Paper elevation={3} >\n        <p className=\"label\">Name: {`${payload.name}`}</p>\n        <GetComparison title=\"P/E Ratio\" data={payload._peNormalizedAnnual} averageData={0} />\n        <GetComparison title=\"Gross Margin\" data={payload._grossMarginTTM} averageData={0} />\n        <GetComparison title=\"Net Margin\" data={payload._netProfitMarginTTM} averageData={0} />\n        <GetComparison title=\"ROE\" data={payload._roeTTM} averageData={0} />\n        <GetComparison title=\"Debt Ratio\" data={payload.debtNetIncomeRatio} averageData={0} />\n        <GetComparison title=\"Enterprise Value\" data={payload.enterpriseValueMultipleTTM} averageData={0} />\n        <p className=\"intro\">Category: {`${payload.category}`}</p>\n      </Paper>\n    );\n  };\n\n  const GetComparison = (props: { title: string, data: number, averageData: number }) => {\n    let data = 0.0\n    if (props.data !== null) {\n      data = props.data\n    }\n    return <p className=\"intro\">{props.title}: {`${data.toFixed(2)}`}</p>\n  }\n\n  const valuetext = (value: number) => { return `${value}%` }\n\n  return (\n    <CustomGrid>\n      <Title>{params.market} smallest P/E</Title>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <ScatterChart\n          width={400}\n          height={400}\n          margin={{\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 20,\n          }}\n        >\n          <XAxis type=\"category\" dataKey=\"category\" allowDuplicatedCategory={false} minTickGap={1} />\n          <YAxis type=\"number\" dataKey=\"_peNormalizedAnnual\" name=\"ratio\" allowDataOverflow={true} >\n            <Label value=\"P/E\" offset={0} position=\"insideLeft\" />\n          </YAxis>\n\n          <Tooltip content={<CustomTooltip />} />\n          <Scatter name=\"A school\" data={peRatio.slice(0, peRatioIndex)} fill=\"#8884d8\" onClick={ev => redirectStock(ev)} />\n        </ScatterChart>\n      </ResponsiveContainer>\n      <div className={classes.root}>\n        <Typography id=\"track-inverted-slider\" gutterBottom>\n          Max P/E ratio\n        </Typography>\n        <Slider\n          track=\"inverted\"\n          aria-labelledby=\"track-inverted-slider\"\n          getAriaValueText={valuetext}\n          value={limit}\n          onChange={handleChange}\n          valueLabelDisplay=\"auto\"\n        />\n      </div>\n    </CustomGrid>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport { ResponsiveContainer, Scatter, ScatterChart, Tooltip, XAxis, YAxis } from 'recharts';\nimport { get_dcf_ratio } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport CustomGrid from './template/CustomGrid';\nimport { DCFRatio } from './models';\nimport { createStyles, makeStyles, Paper, Slider, Theme, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: 250,\n    },\n    margin: {\n      height: theme.spacing(3),\n    },\n  }),\n);\n\n// change this dinamically\nconst THRESHOLD = 1\n\nexport default function MarketDCF() {\n  const [dcfRatio, setPeRate] = useState<DCFRatio[]>([]);\n  const params: { market: string } = useParams()\n  const [limit, setLimit] = useState<number>(THRESHOLD);\n\n  const handleChange = (event: any, value: number | number[]) => {\n    if (typeof (value) === \"number\") {\n      setLimit(value)\n    }\n  };\n\n  useEffect(() => {\n    get_dcf_ratio(params.market).then(response => {\n      let info = response as DCFRatio[]\n\n      // sort list\n      function compare(a: DCFRatio, b: DCFRatio) {\n        if (a.ratio < b.ratio) {\n          return -1;\n        }\n        return 0;\n      }\n      info.sort(compare);\n      setPeRate(info)\n    })\n\n  }, [params.market])\n\n  function redirectStock(ev: any) {\n    if (ev?.symbol !== undefined) {\n      window.location.href = `/#/market/${params.market}/${ev.symbol}`\n    }\n  }\n\n  const classes = useStyles();\n\n  function CustomTooltip(props: any, aaa: {}) {\n    let a = props as { payload: { payload: DCFRatio }[] }\n\n    if ((a == null) || (a.payload == null) || (a.payload[0] == null)) {\n      return null\n    }\n    let payload = a.payload[0].payload\n\n    return (\n      <Paper elevation={3} >\n        <p className=\"label\">Symbol: {`${payload.symbol}`}</p>\n        <GetComparison title=\"Price\" data={payload.price} averageData={0} />\n        <GetComparison title=\"Target Price\" data={payload.target_price} averageData={0} />\n        <p className=\"label\">Date: {`${payload.date}`}</p>\n      </Paper>\n    );\n  };\n\n  const GetComparison = (props: { title: string, data: number, averageData: number }) => {\n    let data = 0.0\n    if (props.data !== null) {\n      data = props.data\n    }\n    return <p className=\"intro\">{props.title}: {`${data.toFixed(2)}`}</p>\n  }\n\n  const valuetext = (value: number) => { return `${value}%` }\n\n  return (\n    <CustomGrid>\n      <Title>{params.market} DCF biggest delta</Title>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <ScatterChart\n          width={400}\n          height={400}\n          margin={{\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 20,\n          }}\n        >\n          <XAxis type=\"category\" dataKey=\"category\" allowDuplicatedCategory={false} minTickGap={1} />\n          <YAxis type=\"number\" dataKey=\"ratio\" name=\"ratio\" allowDataOverflow={true} domain={[THRESHOLD, 10]}/>\n\n          <Tooltip content={<CustomTooltip />} />\n          <Scatter name=\"A school\" data={dcfRatio} fill=\"#8884d8\" onClick={ev => redirectStock(ev)} />\n        </ScatterChart>\n      </ResponsiveContainer>\n      <div className={classes.root}>\n        <Typography id=\"track-inverted-slider\" gutterBottom>\n          Minimium ratio\n        </Typography>\n        <Slider\n          track=\"inverted\"\n          aria-labelledby=\"track-inverted-slider\"\n          getAriaValueText={valuetext}\n          value={limit}\n          onChange={handleChange}\n          valueLabelDisplay=\"auto\"\n        />\n      </div>\n    </CustomGrid>\n  )\n}","import React from 'react';\nimport { render } from 'react-dom';\nimport { HashRouter as Router, Switch, Route, } from \"react-router-dom\";\n\nimport Dashboard from './template/Dashboard';\nimport Market from './Market';\nimport DividensChart from './Dividends';\nimport MarketDividends from './MarketDividends';\nimport MarketAnalysis from './MarketAnalysis';\nimport Stock from './Stock';\nimport MarketSectorAnalysis from './MarketSectorAnalysis';\nimport MarketDCF from './MarketDCF';\n\nrender(\n  <React.Fragment>\n    <Dashboard>\n      <Router >\n        <Switch>\n          <Route exact path=\"/market/:market/dividends/:id\" component={DividensChart} />\n          <Route exact path=\"/market/:market\" component={Market} />\n          <Route exact path=\"/market/:market/dividends\" component={MarketDividends} />\n          <Route exact path=\"/market/:market/analysis\" component={MarketAnalysis} />\n          <Route exact path=\"/market/:market/sector\" component={MarketSectorAnalysis} />\n          <Route exact path=\"/market/:market/dcf\" component={MarketDCF} />\n          <Route exact path=\"/market/:market/:stock\" component={Stock} />\n        </Switch>\n      </Router>\n    </Dashboard>\n  </React.Fragment>,\n  document.getElementById('root'),\n);","import React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport CustomGrid from './template/CustomGrid';\nimport { get_key_metrics } from './utils';\nimport { KeyMetrics } from './models';\n\n\nexport default function DividensChart() {\n  const [keyMetrics, setKeyMetrics] = useState<KeyMetrics[]>()\n  const params: { market: string, id: string } = useParams()\n  const theme = useTheme()\n\n  useEffect(() => {\n    get_key_metrics(params.market, params.id, \"quarter\").then(response => {\n      let resp = response as KeyMetrics[];\n      if (resp !== undefined) {\n          setKeyMetrics(resp)\n      }\n  } )\n  }, [params.id, params.market])\n\n\n  return (\n      <CustomGrid>\n        <Title>{params.id} dividends historical</Title>\n        <ResponsiveContainer>\n          <LineChart\n            width={500}\n            height={300}\n            data={keyMetrics}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5\n            }}\n          >\n            <XAxis dataKey=\"date\" tickFormatter={d => `${new Date(d).getFullYear().toString()}`} stroke={theme.palette.text.secondary} />\n            <YAxis dataKey=\"dividendYield\"  stroke={theme.palette.text.secondary} />\n            <Tooltip formatter={(value:number) => value.toFixed(3)}/>\n            <Legend />\n            <Line\n              type=\"monotone\"\n              dataKey=\"dividendYield\"\n              name=\"Dividends\"\n              stroke={theme.palette.primary.main}\n              dot={false}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </CustomGrid>)\n}","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport CustomGrid from './template/CustomGrid';\nimport { Grid, Link, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport { ResponsiveContainer } from 'recharts';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport { Money } from '@material-ui/icons';\n\nexport default function Market() {\n    const params: { market: string } = useParams()\n\n    return (\n        <CustomGrid>\n            <Title>{params.market} market insights</Title>\n            <ResponsiveContainer>\n                <Grid container >\n                    <Grid item xs>\n                        <ListItem button component={Link} href={`/#/market/${params.market}/dividends`}>\n                            <ListItemIcon>\n                                <MonetizationOnIcon style={{ fontSize: 120 }} />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Dividends\" />\n                        </ListItem>\n                    </Grid >\n                    <Grid item xs>\n                        <ListItem button component={Link} href={`/#/market/${params.market}/analysis`}>\n                            <ListItemIcon>\n                                <TrendingUpIcon style={{ fontSize: 120 }} />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Cheap Value Stocks\" />\n                        </ListItem>\n                    </Grid >\n                    <Grid item xs>\n                        <ListItem button component={Link} href={`/#/market/${params.market}/sector`}>\n                            <ListItemIcon>\n                                <BusinessIcon style={{ fontSize: 120 }} />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Stocks by sector\" />\n                        </ListItem>\n                    </Grid >\n                    <Grid item xs>\n                        <ListItem button component={Link} href={`/#/market/${params.market}/dcf`}>\n                            <ListItemIcon>\n                                <Money style={{ fontSize: 120 }} />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Stocks by DCF ratio\" />\n                        </ListItem>\n                    </Grid >\n                </Grid >\n            </ResponsiveContainer>\n        </CustomGrid>)\n}","import React, { useState, useEffect, useMemo } from 'react';\nimport { Label, LabelList, ReferenceLine, ResponsiveContainer, Scatter, ScatterChart, Tooltip, XAxis, YAxis } from 'recharts';\nimport { get_metrics } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport CustomGrid from './template/CustomGrid';\nimport { GeneralMetrics } from './models';\nimport { Paper, TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\n\n\nexport default function MarketSectorAnalysis() {\n  const [peRatio, setPeRate] = useState<GeneralMetrics[]>([]);\n  const [selectedPeRatio, setSelectedPeRatio] = useState<GeneralMetrics[]>([]);\n  const [industry, setIndustry] = useState<string[]>([]);\n  const [industries, setIndustries] = useState<string[]>([]);\n\n  const params: { market: string } = useParams()\n\n  function redirect(event: string[]) {\n    setIndustry(event)\n  }\n\n  useEffect(() => {\n    get_metrics(params.market).then(response => {\n      let info = response as GeneralMetrics[]\n      setPeRate(info)\n      let lotOfIndustries = [] as string[]\n      for (let i = 0; i < info.length; i++) {\n        if (!lotOfIndustries.includes(info[i].category)) {\n          lotOfIndustries.push(info[i].category)\n        }\n      }\n      lotOfIndustries.sort()\n      setIndustries(lotOfIndustries)\n    })\n\n  }, [params.market])\n\n  function redirectStock(ev: any) {\n    if (ev?.name !== undefined) {\n      window.location.href = `/#/market/${params.market}/${ev.name}`\n    }\n  }\n\n  useMemo(() => {\n    if (industry === []) {\n      return\n    }\n\n    let select = [] as GeneralMetrics[]\n    let length = peRatio.length\n    for (let i = 0; i < length; i++) {\n      if (industry.includes(peRatio[i].category)) {\n        select.push(peRatio[i])\n      }\n    }\n    setSelectedPeRatio(select)\n  }, [industry, peRatio]);\n\n  function CustomTooltip(props: any, aaa: {}) {\n    let a = props as { payload: { payload: GeneralMetrics }[] }\n\n    if ((a == null) || (a.payload == null) || (a.payload[0] == null)) {\n      return null\n    }\n    let payload = a.payload[0].payload\n\n    return (\n      <Paper elevation={3} >\n        <p className=\"label\">Name: {`${payload.name}`}</p>\n        <GetComparison title=\"P/E Ratio\" data={payload._peNormalizedAnnual} averageData={0} />\n        <GetComparison title=\"Gross Margin\" data={payload._grossMarginTTM} averageData={0} />\n        <GetComparison title=\"Net Margin\" data={payload._netProfitMarginTTM} averageData={0} />\n        <GetComparison title=\"ROE\" data={payload._roeTTM} averageData={0} />\n        <GetComparison title=\"Debt Ratio:\" data={payload.debtNetIncomeRatio} averageData={0} />\n        <p className=\"intro\">Category: {`${payload.category}`}</p>\n      </Paper>\n    );\n  };\n\n  const GetComparison = (props: { title: string, data: number, averageData: number }) => {\n    let data = 0.0\n    if (props.data !== null) {\n      data = props.data\n    }\n    return <p className=\"intro\">{props.title}: {`${data.toFixed(2)}`}</p>\n  }\n\n  return (\n    <CustomGrid>\n      <Title>{params.market} - {industry} P/E vs Net Margin</Title>\n      <Autocomplete\n        multiple\n        id=\"tags-standard\"\n        options={industries}\n        getOptionLabel={option => `${option}`}\n        onChange={(event, newValue) => {\n          redirect(newValue);\n        }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"standard\"\n            label=\"Stock Industries\"\n            placeholder=\"Industries\"\n          />\n        )}\n      />\n      <ResponsiveContainer width=\"100%\" height=\"85%\">\n        <ScatterChart\n          width={400}\n          height={400}\n          margin={{\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 20,\n          }}\n        >\n          <XAxis type=\"number\" dataKey=\"_netProfitMarginTTM\" domain={[-1, 1]} allowDataOverflow={true} >\n            <Label value=\"Net Margin\" offset={0} position=\"bottom\" />\n          </XAxis>\n\n          <YAxis type=\"number\" dataKey=\"_peNormalizedAnnual\" domain={[-20, 50]} allowDataOverflow={true} >\n            <Label value=\"P/E\" offset={0} position=\"insideLeft\" />\n          </YAxis>\n\n          <Tooltip content={<CustomTooltip />} />\n          <Scatter name=\"A school\" data={selectedPeRatio} fill=\"#8884d8\" onClick={ev => redirectStock(ev)}>\n            <LabelList dataKey=\"name\" position=\"top\" />\n          </Scatter>\n\n          <ReferenceLine y={0} stroke=\"#000000\" />\n          <ReferenceLine x={0} stroke=\"#000000\" />\n        </ScatterChart>\n      </ResponsiveContainer>\n    </CustomGrid>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Typography, Grid } from '@material-ui/core';\n\nimport { get_dcf, get_info, get_key_metrics } from './utils';\nimport { CompanyProfile, DCF, KeyMetrics } from './models';\nimport Title from './template/Title';\nimport { Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport CustomGrid from './template/CustomGrid';\n\n\nexport default function Stock() {\n    const params: { market: string, stock: string } = useParams()\n    const [companyProfile, setcompanyProfile] = useState<CompanyProfile>()\n    const [keyMetrics, setKeyMetrics] = useState<KeyMetrics[]>()\n    const [dcf, setDCF] = useState<DCF>()\n\n    useEffect(() => {\n        get_info(params.market, params.stock).then(response => {\n            if (response !== undefined) {\n                let resp = response as CompanyProfile\n                setcompanyProfile(resp)\n            }\n        })\n        get_key_metrics(params.market, params.stock, \"quarter\").then(response => {\n            let resp = response as KeyMetrics[];\n            if (resp !== undefined) {\n                setKeyMetrics(resp)\n            }\n        })\n\n        get_dcf(params.market, params.stock).then(response => {\n            let resp = response as DCF;\n            if (resp !== undefined) {\n                setDCF(resp)\n            }\n        })\n\n    }, [params.market, params.stock])\n\n\n    function showDividends() {\n        return (<Grid item>\n            <Typography variant=\"h4\" color=\"inherit\">Dividends</Typography>\n            <MetricsGraph title=\"Dividends\" dataKey=\"dividendYield\" label=\"Dividend Ratio\" description=\"Dividends/Stock Price\" />\n        </Grid>\n        )\n    }\n\n    function MetricsGraph(props: { title: string, label: string, dataKey: string, description: string }): JSX.Element {\n        return (\n            <React.Fragment>\n                <Typography variant=\"h6\" color=\"inherit\">{props.title}</Typography>\n                {/* {props.description} show in a popup with question mark */}\n                <LineChart width={300} height={100} data={keyMetrics}>\n                    <XAxis dataKey=\"date\" />\n                    <YAxis hide />\n                    <Line type=\"monotone\" dataKey={props.dataKey} stroke=\"#8884d8\" name={props.label} strokeWidth={2} />\n                    <Tooltip formatter={(value:number) => value.toFixed(3)} />\n                </LineChart>\n            </React.Fragment>\n        )\n    }\n\n    return (\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <CustomGrid>\n                <Title>{params.stock} - {companyProfile?.companyName}</Title>\n                <Typography variant=\"h5\" color=\"inherit\">Industry: {companyProfile?.industry}</Typography>\n                <br />\n                <br />\n                <Grid container spacing={4} >\n                    <Grid item spacing={5}>\n                        <Typography variant=\"h4\" color=\"inherit\">Income and Revenue</Typography>\n                        <MetricsGraph title=\"ROE\" dataKey=\"roe\" label=\"Ratio\" description=\"Profit/Equity\" />\n                        <MetricsGraph title=\"EPS\" dataKey=\"earningsYield\" label=\"Ratio\" description=\"Earns per Share\" />\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"h4\" color=\"inherit\">Debt and liabilites</Typography>\n                        <MetricsGraph title=\"Debt to Equity\" dataKey=\"debtToEquity\" label=\"Ratio\" description=\"Total Debt/Equity\" />\n                        <MetricsGraph title=\"Current Ratio\" dataKey=\"currentRatio\" label=\"Ratio\" description=\"Assets/Liabilities\" />\n                    </Grid>\n                    {showDividends()}\n                    <Grid item>\n                        <Typography variant=\"h4\" color=\"inherit\">Ratios</Typography>\n                        <MetricsGraph title=\"Price to Book\" dataKey=\"pbRatio\" label=\"Ratio\" description=\"Price to assets\" />\n                        <MetricsGraph title=\"P/E historical\" dataKey=\"peRatio\" label=\"Ratio\" description=\"P/E historical\" />\n                    </Grid>\n                    <Grid item>\n                    <Typography variant=\"h4\" color=\"inherit\">DCF</Typography>\n                        <Typography variant=\"h5\" color=\"inherit\">Price: {dcf?.['Stock Price']}</Typography>\n                        <Typography variant=\"h5\" color=\"inherit\">Target Price: {dcf?.dcf?.toFixed(.2)}</Typography>\n                    </Grid>\n                </Grid>\n\n            </CustomGrid>\n        </ResponsiveContainer>\n    )\n}"],"sourceRoot":""}