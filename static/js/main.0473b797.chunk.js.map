{"version":3,"sources":["utils.tsx","template/Title.js","template/CustomGrid.js","MarketAnalysis.tsx","template/listitems.js","template/Dashboard.js","index.tsx","Dividends.tsx","MarketDividends.tsx"],"names":["URL","window","location","origin","download_data","market","ticker","path","fetch","method","then","response","json","data","catch","error","console","Title","props","Typography","component","variant","color","gutterBottom","children","useStyles","makeStyles","theme","paper","padding","spacing","display","overflow","flexDirection","fixedHeight","height","CustomGrid","classes","fixedHeightPaper","clsx","Grid","item","xs","Paper","className","CustomTooltip","aaa","a","payload","name","priceEarningsRatio","mainListItems","ListItem","button","ListItemIcon","code","ListItemText","primary","root","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","title","flexGrow","width","flexShrink","drawerPaper","drawerContainer","appBarSpacer","content","container","paddingTop","paddingBottom","Dashboard","CssBaseline","AppBar","position","Toolbar","noWrap","Drawer","Divider","List","Container","render","Fragment","exact","useState","setData","currency","setCurrency","params","useParams","useTheme","useEffect","id","log","dividends","index","currentYear","Date","date","getFullYear","nextYear","toString","adjustedAmount","splice","length","ResponsiveContainer","LineChart","margin","top","right","left","bottom","XAxis","dataKey","tickFormatter","d","stroke","palette","text","secondary","YAxis","Tooltip","Legend","Line","type","main","dot","dividendRate","setDividendRate","info","ScatterChart","unit","cursor","strokeDasharray","Scatter","fill","LabelList","peRatio","setPeRate","newInfo","push","document","getElementById"],"mappings":"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","file":"static/js/main.0473b797.chunk.js","sourcesContent":["import { Dividend, CompanyProfile, StockMetric, MarketSymbols, PriceEarningsRatio, DividendsRatio} from \"./models\";\n\nconst URL = window.location.origin\nconst DIVIDENDS = \"dividends\"\nconst INFO = \"info\"\nconst METRICS = \"metrics\"\n\nfunction download_data(market: string, ticker: string, path: string) {\n\n  return fetch(`${URL}/markets/${market}/${path}/${ticker}.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_dividends(market: string, ticker: string): Promise<void | Dividend[] | null | undefined> {\n  return download_data(market, ticker, DIVIDENDS)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_info(market: string, ticker: string): Promise<void | CompanyProfile | null | undefined> {\n  return download_data(market, ticker, INFO)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_tickers(market: string): Promise<void | MarketSymbols[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/tickers.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_dividends_rate(market: string): Promise<void | DividendsRatio[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/dividendsRate.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_stock_metrics(market: string, ticker: string): Promise<void | StockMetric[] | null | undefined> {\n\n  return download_data(market, ticker, METRICS)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_pe_rate(market: string): Promise<void | PriceEarningsRatio[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/priceEarningComparison.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      height: 540,\n    },\n  }));\n  \n\nexport default function CustomGrid(props) {\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n      <Grid item xs={12}>\n        <Paper className={fixedHeightPaper}>\n          {props.children}\n        </Paper>\n      </Grid>\n    );\n  }\n  ","import React, { useState, useEffect } from 'react';\nimport { ResponsiveContainer, Scatter, ScatterChart, Tooltip, XAxis, YAxis } from 'recharts';\nimport { get_pe_rate } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport CustomGrid from './template/CustomGrid';\n\n\nexport interface PER {\n  name: string,\n  priceEarningsRatio: number\n  index: number\n}\n\nexport default function MarketAnalysis() {\n  const [peRatio, setPeRate] = useState<PER[]>([]);\n  const params: { market: string } = useParams()\n\n  useEffect(() => {\n    get_pe_rate(params.market).then(response => {\n      let info = response as PER[]\n      var newInfo =  [] as PER[]\n      // TODO: separate by industry\n      // Remove ratios above 20\n      for (let index = 0; index < info.length; index++) {\n        if (info[index].priceEarningsRatio < 20) {\n          info[index].index = index\n          newInfo.push(info[index])\n        }       \n      }\n      setPeRate(newInfo)\n    })\n  }, [params.market])\n\n  return (\n    <CustomGrid>\n      <Title>{params.market} smallest P/E</Title>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <ScatterChart\n          width={400}\n          height={400}\n          margin={{\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 20,\n          }}\n        >\n          <XAxis type=\"number\" dataKey=\"index\" />\n          <YAxis type=\"number\" dataKey=\"priceEarningsRatio\" name=\"ratio\" unit=\"%\" />\n          <Tooltip content={<CustomTooltip />} />\n          <Scatter name=\"A school\" data={peRatio} fill=\"#8884d8\"/>\n        </ScatterChart>\n      </ResponsiveContainer>\n    </CustomGrid>\n  )\n}\n\nfunction CustomTooltip ( props: any , aaa: {})  {\n  let a = props as {payload: {payload: {name: string, priceEarningsRatio: number}}[]}\n\n    if ((a == null) || ( a.payload == null) || ( a.payload[0] == null)) {\n      return null\n    } \n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"label\">Name: {`${a.payload[0].payload.name}`}</p>\n        <p className=\"intro\">P/E Ratio: {`${a.payload[0].payload.priceEarningsRatio}`}</p>\n      </div>\n    );\n};","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Flag from 'react-world-flags'\n\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <Flag code=\"swe\" height=\"16\" />\n      </ListItemIcon>\n      <ListItemText primary=\"Sweden\" />\n    </ListItem>\n  </div>\n);\n\n\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { mainListItems } from './listitems.js';\n\n\nconst drawerWidth = 180;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\n\nexport default function Dashboard(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar)}>\n        <Toolbar className={classes.toolbar}>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Visualizing Stocks\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{ paper: clsx(classes.drawerPaper) }}>\n        <Toolbar />\n        <Divider />\n        <div className={classes.drawerContainer}>\n          <List>{mainListItems}</List>\n        </div>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container className={classes.container}>\n          <Grid container spacing={3}>\n            {props.children}\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport DividensChart from './Dividends';\nimport MarketDividends from './MarketDividends';\nimport MarketAnalysis from './MarketAnalysis';\n\nimport { HashRouter as Router, Switch, Route, } from \"react-router-dom\";\nimport Dashboard from './template/Dashboard';\nrender(\n  <React.Fragment>\n    <Dashboard>\n      <Router >\n        <Switch>\n          <Route exact path=\"/dividends/:market/:id\" component={DividensChart} />\n          <Route exact path=\"/market/dividends/:market\" component={MarketDividends} />\n          <Route exact path=\"/market/analysis/:market\" component={MarketAnalysis} />\n        </Switch>\n      </Router>\n    </Dashboard>\n  </React.Fragment>,\n  document.getElementById('root'),\n);","import React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Dividend } from \"./models\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { get_dividends } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport CustomGrid from './template/CustomGrid';\n\nexport default function DividensChart() {\n  const [data, setData] = useState<Dividend[]>([]);\n  const [currency, setCurrency] = useState<string>(\"$\");\n  const params: { market: string, id: string } = useParams()\n  const theme = useTheme()\n\n  useEffect(() => {\n    get_dividends(params.market, params.id).then(response => {\n      let dividends = response as Dividend[]\n      let index = 0\n      while (typeof dividends[index + 1] !== 'undefined') {\n        let currentYear = new Date(dividends[index].date).getFullYear()\n        let nextYear = new Date(dividends[index + 1].date).getFullYear()\n        dividends[index].date = currentYear.toString()\n        if (currentYear === nextYear) {\n          dividends[index].adjustedAmount = dividends[index].adjustedAmount + dividends[index + 1].adjustedAmount\n          dividends.splice(index + 1, 1);\n        }\n        index = index + 1\n      }\n      setData(dividends)\n\n      if (dividends.length > 0) {\n        setCurrency(dividends[0].currency)\n      }\n\n    })\n  }, [params.id, params.market])\n\n\n  return (\n      <CustomGrid>\n        <Title>{params.id} dividends historical</Title>\n        <ResponsiveContainer>\n          <LineChart\n            width={500}\n            height={300}\n            data={data}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5\n            }}\n          >\n            <XAxis dataKey=\"date\" tickFormatter={d => `${new Date(d).getFullYear().toString()}`} stroke={theme.palette.text.secondary} />\n            <YAxis dataKey=\"adjustedAmount\" tickFormatter={d => `${currency} ${d}`} stroke={theme.palette.text.secondary} />\n            <Tooltip />\n            <Legend />\n            <Line\n              type=\"monotone\"\n              dataKey=\"adjustedAmount\"\n              name=\"Dividends\"\n              stroke={theme.palette.primary.main}\n              dot={false}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </CustomGrid>)\n}","import React, { useState, useEffect } from 'react';\nimport { LabelList, ResponsiveContainer, Scatter, ScatterChart, Tooltip, XAxis, YAxis } from 'recharts';\nimport { get_dividends_rate } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport { DividendsRatio } from './models';\nimport CustomGrid from './template/CustomGrid';\n\nexport interface DR {\n  name: string,\n  dividendsRatio: number\n  index: number\n}\n\nexport default function MarketDividends() {\n  const [dividendRate, setDividendRate] = useState<DividendsRatio[]>([]);\n  const params: { market: string } = useParams()\n\n  useEffect(() => {\n    get_dividends_rate(params.market).then(response => {\n      let info = response as DR[]\n      // use inverted number to sort ASC\n      for (let index = 0; index < info.length; index++) {\n        info[index].index = index\n      }\n      setDividendRate(info)\n    })\n  }, [params.market])\n\n  return (\n    <CustomGrid>\n      <Title>{params.market} biggest dividends</Title>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <ScatterChart\n          width={400}\n          height={400}\n          margin={{\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 20,\n          }}\n        >\n          <XAxis type=\"number\" dataKey=\"index\" />\n          <YAxis type=\"number\" dataKey=\"dividendsRatio\" name=\"ratio\" unit=\"%\" />\n          <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n          <Scatter name=\"A school\" data={dividendRate} fill=\"#8884d8\">\n            <LabelList dataKey=\"name\" position=\"top\"/>\n          </Scatter>\n        </ScatterChart>\n      </ResponsiveContainer>\n    </CustomGrid>\n  )\n}\n"],"sourceRoot":""}