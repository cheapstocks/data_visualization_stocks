{"version":3,"sources":["template/listitems.js","utils.tsx","template/Dashboard.js","template/Title.js","template/CustomGrid.js","MarketDividends.tsx","MarketAnalysis.tsx","index.tsx","Dividends.tsx","Market.tsx","Stock.tsx"],"names":["mainListItems","ListItem","button","component","Link","href","ListItemIcon","code","height","ListItemText","primary","URL","download_data","market","ticker","path","fetch","method","then","response","json","data","catch","error","console","get_dividends","log","get_peers","get_all_symbols","markets","tickers","forEach","get_tickers","push","symbol","description","useStyles","makeStyles","theme","root","display","toolbarIcon","alignItems","justifyContent","padding","mixins","toolbar","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","title","flexGrow","width","flexShrink","drawerPaper","drawerContainer","overflow","appBarSpacer","content","container","paddingTop","spacing","paddingBottom","window","location","origin","Dashboard","props","useState","open","setOpen","items","setItems","setMarkets","classes","useEffect","resp","useMemo","className","CssBaseline","AppBar","position","clsx","Toolbar","Typography","variant","color","noWrap","Autocomplete","autoHighlight","id","style","backgroundColor","onOpen","onClose","getOptionSelected","option","value","getOptionLabel","options","onChange","event","newValue","undefined","redirect","renderInput","params","TextField","label","InputProps","Drawer","paper","Divider","List","Container","children","Title","gutterBottom","flexDirection","fixedHeight","CustomGrid","fixedHeightPaper","Grid","item","xs","Paper","input","INITIAL_LIMITS","CustomTooltip","aaa","a","payload","elevation","name","dividendsRatio","toFixed","category","valuetext","createStyles","margin","render","Fragment","exact","setData","currency","setCurrency","useParams","useTheme","dividends","index","currentYear","Date","date","getFullYear","nextYear","toString","adjustedAmount","splice","length","ResponsiveContainer","LineChart","top","right","left","bottom","XAxis","dataKey","tickFormatter","d","stroke","palette","text","secondary","YAxis","Tooltip","Legend","Line","type","main","dot","fontSize","dividendRate","setDividendRate","peers","setPeers","React","dividendsInterval","setDividendsInterval","peerGroup","find","group","includes","companyAsPeer","companyPeer","finnhubIndustry","ScatterChart","allowDuplicatedCategory","unit","domain","allowDataOverflow","Scatter","fill","onClick","ev","redirectStock","Slider","valueLabelDisplay","getAriaValueText","peRatio","setPeRate","limit","setLimit","GetComparison","_peNormalizedAnnual","averageData","_grossMarginTTM","average","_netProfitMarginTTM","_roeTTM","debtNetIncomeRatio","icon","titleAccess","minTickGap","track","companyProfile","setcompanyProfile","metrics","setMetrics","setDividends","MetricsGraph","sort","b","period","getTime","hide","strokeWidth","stock","get_stock_metrics","newFormat","dividend","v","amount","series","annual","netMargin","grossMargin","eps","totalDebtToEquity","currentRatio","price","marketCapitalization","shareOutstanding","i","Number","showDividends","document","getElementById"],"mappings":"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","file":"static/js/main.58d2cbce.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Flag from 'react-world-flags'\nimport Link from '@material-ui/core/Link';\n\n\nexport const mainListItems = (\n  <div>\n    <ListItem button component={Link} href=\"/#/market/ST\">\n      <ListItemIcon>\n        <Flag code=\"swe\" height=\"16\" />\n      </ListItemIcon>\n      <ListItemText primary=\"Sweden\" />\n    </ListItem>\n    <ListItem button component={Link} href=\"/#/market/CO\">\n      <ListItemIcon>\n        <Flag code=\"dnk\" height=\"16\" />\n      </ListItemIcon>\n      <ListItemText primary=\"Denmark\" />\n    </ListItem>\n    <ListItem button component={Link} href=\"/#/market/HE\">\n      <ListItemIcon>\n        <Flag code=\"fin\" height=\"16\" />\n      </ListItemIcon>\n      <ListItemText primary=\"Finland\" />\n    </ListItem>\n    <ListItem button component={Link} href=\"/#/market/IC\">\n      <ListItemIcon>\n        <Flag code=\"isl\" height=\"16\" />\n      </ListItemIcon>\n      <ListItemText primary=\"Iceland\" />\n    </ListItem>\n  </div>\n);\n\n\n","import { Dividend, CompanyProfile, StockMetric, MarketSymbols, GeneralMetrics, DividendsRatio, CompanyPeers} from \"./models\";\n\nconst URL = \"https://api.cheapstocks.app\"\nconst DIVIDENDS = \"dividends\"\nconst INFO = \"info\"\nconst METRICS = \"metrics\"\n\nfunction download_data(market: string, ticker: string, path: string) {\n\n  return fetch(`${URL}/markets/${market}/${path}/${ticker}.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_dividends(market: string, ticker: string): Promise<void | Dividend[] | null | undefined> {\n  return download_data(market, ticker, DIVIDENDS)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_info(market: string, ticker: string): Promise<void | CompanyProfile | null | undefined> {\n  return download_data(market, ticker, INFO)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_tickers(market: string): Promise<void | MarketSymbols[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/tickers.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_dividends_rate(market: string): Promise<void | DividendsRatio[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/dividendsRate.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_stock_metrics(market: string, ticker: string): Promise<void | StockMetric | null | undefined> {\n\n  return download_data(market, ticker, METRICS)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_metrics(market: string): Promise<void | GeneralMetrics[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/general_metrics.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_peers(market: string): Promise<void | CompanyPeers[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/peers.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_markets(): Promise<void | string[] | null | undefined> {\n\n  return fetch(`${URL}/markets.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_all_symbols(markets: string[]): {symbol: string, market: string, description: string}[] {\n\n  let tickers = [] as {symbol: string, market: string, description: string}[]\n  markets.forEach(market => {\n    get_tickers(market).then(response => {\n      let resp = response as MarketSymbols[]\n      resp.forEach(ticker  => {\n        tickers.push({\n          symbol: ticker.symbol,\n          description: ticker.description,\n          market: market,\n        })\n      });\n      tickers.push({\n        symbol: market,\n        market: market,\n        description: `${market} Exchange`\n      })\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n      return tickers\n    });;\n  })\n\n  return tickers\n}","import { React, useState, useEffect, useMemo } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Container from '@material-ui/core/Container';\nimport { mainListItems } from './listitems.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport { get_all_symbols, get_markets } from '../utils.tsx';\n\nconst drawerWidth = 180;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\n\nconst URL = window.location.origin\n\nfunction redirect(event) {\n  if ((event?.market === undefined) || (event?.symbol === undefined)) {\n    return\n  }\n  if (event.market === event.symbol) {\n    window.location.href = `/#/market/${event.market}`\n    return\n  } \n  window.location.href = `/#/market/${event.market}/${event.symbol}`\n}\n\nexport default function Dashboard(props) {\n  const [open, setOpen] = useState(false);\n  const [items, setItems] = useState([]);\n  const [markets, setMarkets] = useState([]);\n  const classes = useStyles();\n\n  useEffect(() => {\n    // download markets\n    get_markets().then(resp => {\n      setMarkets(resp)\n    })\n  }, [])\n\n  useMemo(() => {\n    setItems(get_all_symbols(markets))\n  }, [markets]);\n\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar)}>\n        <Toolbar>\n          <Typography component=\"h1\" href={URL} variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Visualizing Stocks\n          </Typography>\n          <Autocomplete\n            autoHighlight\n            id=\"stocks_search\"\n            style={{ width: '30%', backgroundColor: '#FFFFFF', height: '30%' }}\n            open={open}\n            onOpen={() => { setOpen(true) }}\n            onClose={() => { setOpen(false) }}\n            getOptionSelected={(option, value) => option.symbol === value.symbol}\n            getOptionLabel={option => `${option.symbol} - ${option.description}`}\n            options={items}\n            onChange={(event, newValue) => {\n              redirect(newValue);\n            }}\n            renderInput={params => (\n              <TextField\n                {...params}\n                label=\"Search for stock, market\"\n                variant=\"outlined\"\n                InputProps={{\n                  ...params.InputProps,\n                }}\n              />\n            )} />\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{ paper: clsx(classes.drawerPaper) }}>\n        <Toolbar />\n        <Divider />\n        <div className={classes.drawerContainer}>\n          <List>{mainListItems}</List>\n        </div>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container className={classes.container}>\n          {props.children}\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 800,\n  },\n}));\n\n\nexport default function CustomGrid(props) {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Paper className={fixedHeightPaper}>\n          {props.children}\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { ResponsiveContainer, Scatter, ScatterChart, Tooltip, XAxis, YAxis } from 'recharts';\nimport { get_dividends_rate, get_peers } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport { CompanyPeers, DividendsRatio } from './models';\nimport CustomGrid from './template/CustomGrid';\nimport { makeStyles, Paper, Slider, Typography } from '@material-ui/core';\n\nexport interface DR extends DividendsRatio{\n  category: string\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n  },\n  input: {\n    width: 42,\n  },\n});\n\nconst INITIAL_LIMITS = [5, 25]\n\nexport default function MarketDividends() {\n  const [dividendRate, setDividendRate] = useState<DR[]>([]);\n  const [peers, setPeers] = useState<CompanyPeers[]>([]);\n  const params: { market: string } = useParams()\n  const classes = useStyles();\n  const [dividendsInterval, setDividendsInterval] = React.useState<number[]>(INITIAL_LIMITS);\n\n  const handleChange = (event: any, newValue: number | number[]) => {\n    setDividendsInterval(newValue as number[]);\n  };\n\n  useEffect(() => {\n    get_dividends_rate(params.market).then(response => {\n      let info = response as DR[]\n      setDividendRate(info)\n    })\n\n    get_peers(params.market).then(response => {\n      let info = response as CompanyPeers[]\n      setPeers(info)\n    })\n  }, [params.market])\n\n  function redirectStock(ev: any) {\n    if (ev?.name !== undefined) {\n      window.location.href = `/#/market/${params.market}/${ev.name}`\n    }\n  }\n\n  useMemo(() => {\n    // add category for companies\n    for (let index = 0; index < dividendRate.length; index++){\n      // find companies and add finnhub industry\n      var peerGroup = peers.find(group => group.group.includes(dividendRate[index].name))\n      \n      if (peerGroup === undefined ){\n        continue\n      }\n\n      var companyAsPeer = peerGroup.peers.find(companyPeer => companyPeer.symbol === dividendRate[index].name)\n\n      if (companyAsPeer === undefined ){\n        continue\n      }\n      dividendRate[index].category = companyAsPeer?.finnhubIndustry\n    }\n\n  }, [dividendRate, peers]);\n\n  return (\n    <CustomGrid>\n      <Title>{params.market} biggest dividends</Title>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <ScatterChart\n          width={400}\n          height={400}\n          margin={{\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 20,\n          }}\n        >\n          <XAxis type=\"category\" dataKey=\"category\" allowDuplicatedCategory={false} />\n          <YAxis type=\"number\" dataKey=\"dividendsRatio\" name=\"ratio\" unit=\"%\" domain={dividendsInterval} allowDataOverflow={true}  />\n          <Tooltip content={<CustomTooltip />} />\n          <Scatter name=\"A school\" data={dividendRate} fill=\"#8884d8\" onClick={ev => redirectStock(ev)}>\n          </Scatter>\n        </ScatterChart>\n      </ResponsiveContainer>\n\n      <div className={classes.root}>\n      <Typography id=\"range-slider\" gutterBottom>\n        Dividends Range\n      </Typography>\n      <Slider\n        value={dividendsInterval}\n        onChange={handleChange}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby=\"range-slider\"\n        getAriaValueText={valuetext}\n      />\n    </div>\n    </CustomGrid>\n  )\n}\n\nfunction CustomTooltip(props: any, aaa: {}) {\n  let a = props as { payload: { payload: { name: string, dividendsRatio: number, category:string } }[] }\n\n  if ((a == null) || (a.payload == null) || (a.payload[0] == null)) {\n    return null\n  }\n  return (\n    <Paper elevation={3} >\n      <p className=\"label\">Name: {`${a.payload[0].payload.name}`}</p>\n      <p className=\"intro\">Dividend/Price ratio: {`${a.payload[0].payload.dividendsRatio.toFixed(1)}%`}</p>\n      <p className=\"intro\">Category: {`${a.payload[0].payload.category}`}</p>\n    </Paper>\n  );\n};\n\nfunction valuetext(value: number) {\n  return `${value}%`;\n}","import React, { useState, useEffect, useMemo } from 'react';\nimport { ResponsiveContainer, Scatter, ScatterChart, Tooltip, XAxis, YAxis } from 'recharts';\nimport { get_peers, get_metrics } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport CustomGrid from './template/CustomGrid';\nimport { CompanyPeers, GeneralMetrics } from './models';\nimport { createStyles, makeStyles, Paper, Slider, Theme, Typography } from '@material-ui/core';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport TrendingDownIcon from '@material-ui/icons/TrendingDown';\nexport interface Metrics extends GeneralMetrics {\n  category: string\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: 250,\n    },\n    margin: {\n      height: theme.spacing(3),\n    },\n  }),\n);\n\n// change this dinamically\nconst THRESHOLD = 20\n\nexport default function MarketAnalysis() {\n  const [peRatio, setPeRate] = useState<Metrics[]>([]);\n  const [peers, setPeers] = useState<CompanyPeers[]>([]);\n  const params: { market: string } = useParams()\n  const [limit, setLimit] = useState<number>(THRESHOLD);\n\n  const handleChange = (event: any, value: number | number[]) => {\n    if (typeof (value) === \"number\") {\n      setLimit(value)\n    }\n  };\n\n  useEffect(() => {\n    get_metrics(params.market).then(response => {\n      let info = response as Metrics[]\n      setPeRate(info)\n    })\n\n    get_peers(params.market).then(response => {\n      let info = response as CompanyPeers[]\n      setPeers(info)\n    })\n  }, [params.market])\n\n  function redirectStock(ev: any) {\n    if (ev?.name !== undefined) {\n      window.location.href = `/#/market/${params.market}/${ev.name}`\n    }\n  }\n\n  useMemo(() => {\n    // add category for companies\n    for (let index = 0; index < peRatio.length; index++) {\n      // find companies and add finnhub industry\n      let peerGroup = peers.find(group => group.group.includes(peRatio[index].name))\n      if (peerGroup === undefined) {\n        continue\n      }\n\n      let companyAsPeer = peerGroup.peers.find(companyPeer => companyPeer.symbol === peRatio[index].name)\n      if (companyAsPeer === undefined) {\n        continue\n      }\n      peRatio[index].category = companyAsPeer?.finnhubIndustry\n    }\n\n  }, [peRatio, peers]);\n\n  const classes = useStyles();\n\n  function CustomTooltip(props: any, aaa: {}) {\n    let a = props as { payload: { payload: Metrics }[] }\n  \n    if ((a == null) || (a.payload == null) || (a.payload[0] == null)) {\n      return null\n    }\n    let payload = a.payload[0].payload\n\n\n    // get peers\n    let companyAsPeer = peers.find(companyPeer => companyPeer.group.includes(payload.name)) as CompanyPeers\n    \n    return (\n      <Paper elevation={3} >\n        <p className=\"label\">Name: {`${payload.name}`}</p>\n        <GetComparison title=\"P/E Ratio\" data={payload._peNormalizedAnnual} averageData={0}/>\n        <GetComparison title=\"Gross Margin\" data={payload._grossMarginTTM} averageData={companyAsPeer.average._grossMarginTTM}/>\n        <GetComparison title=\"Net Margin\" data={payload._netProfitMarginTTM} averageData={companyAsPeer.average._netProfitMarginTTM}/>\n        <GetComparison title=\"ROE\" data={payload._roeTTM} averageData={companyAsPeer.average._roeTTM}/>\n        <GetComparison title=\"Debt Ratio:\" data={payload.debtNetIncomeRatio} averageData={0}/>\n        <p className=\"intro\">Category: {`${payload.category}`}</p>\n      </Paper>\n    );\n  };\n  \n  const GetComparison = (props: {title: string, data: number, averageData: number}) => {\n    let icon = <p></p>\n    if ((props.data > props.averageData)&&(props.averageData !== 0) ){\n      icon = <TrendingUpIcon titleAccess=\"above average\" fontSize='small'/>\n    } else if ((props.data < props.averageData)&&(props.averageData !== 0) ){\n      icon = <TrendingDownIcon titleAccess=\"below average\" fontSize='small'/>\n    }\n\n    return <p className=\"intro\">{props.title}: {`${props.data.toFixed(2)}`}{icon}</p>\n  }\n\n  const valuetext = (value: number) => {return `${value}%`} \n\n  return (\n    <CustomGrid>\n      <Title>{params.market} smallest P/E</Title>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <ScatterChart\n          width={400}\n          height={400}\n          margin={{\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 20,\n          }}\n        >\n          <XAxis type=\"category\" dataKey=\"category\" allowDuplicatedCategory={false} minTickGap={1}  />\n          <YAxis type=\"number\" dataKey=\"_peNormalizedAnnual\" name=\"ratio\" domain={[0, limit]} allowDataOverflow={true} />\n          <Tooltip content={<CustomTooltip />} />\n          <Scatter name=\"A school\" data={peRatio} fill=\"#8884d8\" onClick={ev => redirectStock(ev)}/>\n        </ScatterChart>\n      </ResponsiveContainer>\n      <div className={classes.root}>\n        <Typography id=\"track-inverted-slider\" gutterBottom>\n          Max P/E ratio\n        </Typography>\n        <Slider\n          track=\"inverted\"\n          aria-labelledby=\"track-inverted-slider\"\n          getAriaValueText={valuetext}\n          value={limit}\n          onChange={handleChange}\n          valueLabelDisplay=\"auto\"\n        />\n      </div>\n    </CustomGrid>\n  )\n}","import React from 'react';\nimport { render } from 'react-dom';\nimport { HashRouter as Router, Switch, Route, } from \"react-router-dom\";\n\nimport Dashboard from './template/Dashboard';\nimport Market from './Market';\nimport DividensChart from './Dividends';\nimport MarketDividends from './MarketDividends';\nimport MarketAnalysis from './MarketAnalysis';\nimport Stock from './Stock';\n\nrender(\n  <React.Fragment>\n    <Dashboard>\n      <Router >\n        <Switch>\n          <Route exact path=\"/market/:market/dividends/:id\" component={DividensChart} />\n          <Route exact path=\"/market/:market\" component={Market} />\n          <Route exact path=\"/market/:market/dividends\" component={MarketDividends} />\n          <Route exact path=\"/market/:market/analysis\" component={MarketAnalysis} />\n          <Route exact path=\"/market/:market/:stock\" component={Stock} />\n        </Switch>\n      </Router>\n    </Dashboard>\n  </React.Fragment>,\n  document.getElementById('root'),\n);","import React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Dividend } from \"./models\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { get_dividends } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport CustomGrid from './template/CustomGrid';\n\nexport default function DividensChart() {\n  const [data, setData] = useState<Dividend[]>([]);\n  const [currency, setCurrency] = useState<string>(\"$\");\n  const params: { market: string, id: string } = useParams()\n  const theme = useTheme()\n\n  useEffect(() => {\n    get_dividends(params.market, params.id).then(response => {\n      let dividends = response as Dividend[]\n      let index = 0\n      while (typeof dividends[index + 1] !== 'undefined') {\n        let currentYear = new Date(dividends[index].date).getFullYear()\n        let nextYear = new Date(dividends[index + 1].date).getFullYear()\n        dividends[index].date = currentYear.toString()\n        if (currentYear === nextYear) {\n          dividends[index].adjustedAmount = dividends[index].adjustedAmount + dividends[index + 1].adjustedAmount\n          dividends.splice(index + 1, 1);\n        }\n        index = index + 1\n      }\n      setData(dividends)\n\n      if (dividends.length > 0) {\n        setCurrency(dividends[0].currency)\n      }\n\n    })\n  }, [params.id, params.market])\n\n\n  return (\n      <CustomGrid>\n        <Title>{params.id} dividends historical</Title>\n        <ResponsiveContainer>\n          <LineChart\n            width={500}\n            height={300}\n            data={data}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5\n            }}\n          >\n            <XAxis dataKey=\"date\" tickFormatter={d => `${new Date(d).getFullYear().toString()}`} stroke={theme.palette.text.secondary} />\n            <YAxis dataKey=\"adjustedAmount\" tickFormatter={d => `${currency} ${d}`} stroke={theme.palette.text.secondary} />\n            <Tooltip />\n            <Legend />\n            <Line\n              type=\"monotone\"\n              dataKey=\"adjustedAmount\"\n              name=\"Dividends\"\n              stroke={theme.palette.primary.main}\n              dot={false}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </CustomGrid>)\n}","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport CustomGrid from './template/CustomGrid';\nimport { Grid, Link, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport { ResponsiveContainer } from 'recharts';\n\n\nexport default function Market() {\n    const params: { market: string } = useParams()\n\n    return (\n        <CustomGrid>\n            <Title>{params.market} market insights</Title>\n            <ResponsiveContainer>\n                <Grid container >\n                    <Grid item xs>\n                        <ListItem button component={Link} href={`/#/market/${params.market}/dividends`}>\n                            <ListItemIcon>\n                                <MonetizationOnIcon style={{ fontSize: 120 }} />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Dividends\" />\n                        </ListItem>\n                    </Grid >\n                    <Grid item xs>\n                        <ListItem button component={Link} href={`/#/market/${params.market}/analysis`}>\n                            <ListItemIcon>\n                                <TrendingUpIcon style={{ fontSize: 120 }} />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Cheap Value Stocks\" />\n                        </ListItem>\n                    </Grid >\n                </Grid >\n            </ResponsiveContainer>\n        </CustomGrid>)\n}","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Typography, Grid } from '@material-ui/core';\nimport { get_info, get_stock_metrics, get_dividends } from './utils';\nimport { CompanyProfile, PeriodData, StockMetric, Dividend } from './models';\nimport Title from './template/Title';\nimport { Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport CustomGrid from './template/CustomGrid';\n\n\nexport default function Stock() {\n    const params: { market: string, stock: string } = useParams()\n    const [companyProfile, setcompanyProfile] = useState<CompanyProfile>()\n    const [metrics, setMetrics] = useState<StockMetric>()\n    const [dividends, setDividends] = useState<PeriodData[]>()\n\n    useEffect(() => {\n        get_info(params.market, params.stock).then(response => {\n            let resp = response as CompanyProfile;\n            if (resp !== undefined) {\n                setcompanyProfile(resp)\n            }\n        })\n        get_stock_metrics(params.market, params.stock).then(response => {\n            let resp = response as StockMetric;\n            if (resp !== undefined) {\n                setMetrics(resp)\n            }\n        })\n        get_dividends(params.market, params.stock).then(response => {\n            let resp = response as Dividend[];\n            let newFormat = [] as PeriodData[]\n            if (resp !== undefined) {\n\n                resp.forEach(dividend => {\n                    newFormat.push({ v: dividend.amount, period: dividend.date })\n                });\n                setDividends(newFormat)\n            }\n        }).catch()\n    }, [params.market, params.stock])\n\n\n    function showDividends() {\n        if (dividends === undefined) {\n            return ('')\n        }\n    \n        // get price\n        const marketCap = companyProfile?.marketCapitalization as number\n        const shares = companyProfile?.shareOutstanding as number\n        let price =  marketCap / shares\n\n        // calculate ratio\n        for (let i=0; i< dividends.length; i++ ){\n            dividends[i].v =  Number((dividends[i].v / price).toFixed(2))\n        }\n\n        return (<Grid item>\n            <Typography variant=\"h4\" color=\"inherit\">Dividends</Typography>\n            <MetricsGraph title=\"Dividends\" data={dividends} label=\"Dividend Ratio\" />\n        </Grid>\n        )\n    }\n\n    function MetricsGraph(props: { title: string, data: PeriodData[] | undefined, label: string  }): JSX.Element {\n        if (props.data !== undefined) {\n            props.data.sort((a: PeriodData, b: PeriodData) => new Date(a.period).getTime() - new Date(b.period).getTime())\n        }\n\n        return (\n            <React.Fragment>\n                <Typography variant=\"h6\" color=\"inherit\">{props.title}</Typography>\n                <LineChart width={300} height={100} data={props.data}>\n                    <XAxis dataKey=\"period\" />\n                    <YAxis hide />\n                    <Line type=\"monotone\" dataKey=\"v\" stroke=\"#8884d8\" name={props.label} strokeWidth={2} />\n                    <Tooltip />\n                </LineChart>\n            </React.Fragment>\n        )\n    }\n\n    return (\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <CustomGrid>\n                <Title>{params.stock} details</Title>\n                <Typography variant=\"body2\" color=\"inherit\">\n                    {companyProfile?.description}\n                </Typography>\n\n                <Grid container spacing={4} >\n                    <Grid item spacing={5}>\n                        <Typography variant=\"h4\" color=\"inherit\">Income and Revenue</Typography>\n                        <MetricsGraph title=\"Net Margin\" data={metrics?.series.annual.netMargin} label=\"Ratio\"/>\n                        <MetricsGraph title=\"Gross Margin\" data={metrics?.series.annual.grossMargin} label=\"Ratio\"/>\n                        <MetricsGraph title=\"EPS\" data={metrics?.series.annual.eps} label=\"Ratio\"/>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"h4\" color=\"inherit\">Debt and liabilites</Typography>\n                        <MetricsGraph title=\"Debt to Equity\" data={metrics?.series.annual.totalDebtToEquity} label=\"Ratio\"/>\n                        <MetricsGraph title=\"Current Ratio\" data={metrics?.series.annual.currentRatio} label=\"Ratio\"/>\n                    </Grid>\n                    {showDividends()}\n                </Grid>\n\n            </CustomGrid>\n        </ResponsiveContainer>\n    )\n}\n\n\n"],"sourceRoot":""}