{"version":3,"sources":["template/listitems.js","template/Dashboard.js","template/Title.js","template/CustomGrid.js","utils.tsx","MarketDividends.tsx","MarketAnalysis.tsx","Stock.tsx","index.tsx","Dividends.tsx","Market.tsx"],"names":["mainListItems","ListItem","button","component","Link","href","ListItemIcon","code","height","ListItemText","primary","useStyles","makeStyles","theme","root","display","toolbarIcon","alignItems","justifyContent","padding","mixins","toolbar","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","title","flexGrow","width","flexShrink","drawerPaper","drawerContainer","overflow","appBarSpacer","content","container","paddingTop","spacing","paddingBottom","URL","window","location","origin","Dashboard","props","classes","className","CssBaseline","AppBar","position","clsx","Toolbar","Typography","variant","color","noWrap","Drawer","paper","Divider","List","Container","children","Title","gutterBottom","flexDirection","fixedHeight","CustomGrid","fixedHeightPaper","Grid","item","xs","Paper","download_data","market","ticker","path","fetch","method","then","response","json","data","catch","error","console","get_peers","input","INITIAL_LIMITS","CustomTooltip","aaa","a","payload","elevation","name","dividendsRatio","toFixed","category","valuetext","value","createStyles","margin","_peNormalizedAnnual","capexNetIncomeRatio","_roeTTM","debtNetIncomeRatio","textAlign","palette","text","secondary","main","insights","paddingRight","render","Fragment","exact","useState","setData","currency","setCurrency","params","useParams","useTheme","useEffect","id","log","dividends","index","currentYear","Date","date","getFullYear","nextYear","toString","adjustedAmount","splice","length","ResponsiveContainer","LineChart","top","right","left","bottom","XAxis","dataKey","tickFormatter","d","stroke","YAxis","Tooltip","Legend","Line","type","dot","style","fontSize","dividendRate","setDividendRate","peers","setPeers","React","dividendsInterval","setDividendsInterval","useMemo","undefined","peerGroup","find","group","includes","companyAsPeer","companyPeer","symbol","info","finnhubIndustry","ScatterChart","allowDuplicatedCategory","unit","domain","allowDataOverflow","Scatter","fill","Slider","onChange","event","newValue","valueLabelDisplay","aria-labelledby","getAriaValueText","peRatio","setPeRate","limit","setLimit","track","companyProfile","setcompanyProfile","stock","direction","description","document","getElementById"],"mappings":"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","file":"static/js/main.32833af0.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Flag from 'react-world-flags'\nimport Link from '@material-ui/core/Link';\n\n\nexport const mainListItems = (\n  <div>\n    <ListItem button component={Link} href=\"/#/market/ST\">\n      <ListItemIcon>\n        <Flag code=\"swe\" height=\"16\" />\n      </ListItemIcon>\n      <ListItemText primary=\"Sweden\" />\n    </ListItem>\n    <ListItem button component={Link} href=\"/#/market/CO\">\n      <ListItemIcon>\n        <Flag code=\"dnk\" height=\"16\" />\n      </ListItemIcon>\n      <ListItemText primary=\"Denmark\" />\n    </ListItem>\n    <ListItem button component={Link} href=\"/#/market/HE\">\n      <ListItemIcon>\n        <Flag code=\"fin\" height=\"16\" />\n      </ListItemIcon>\n      <ListItemText primary=\"Finland\" />\n    </ListItem>\n    <ListItem button component={Link} href=\"/#/market/IC\">\n      <ListItemIcon>\n        <Flag code=\"isl\" height=\"16\" />\n      </ListItemIcon>\n      <ListItemText primary=\"Iceland\" />\n    </ListItem>\n  </div>\n);\n\n\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Container from '@material-ui/core/Container';\nimport { mainListItems } from './listitems.js';\n\n\nconst drawerWidth = 180;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\n\nconst URL = window.location.origin\n\nexport default function Dashboard(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar)}>\n        <Toolbar>\n          <Typography component=\"h1\" href={URL} variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Visualizing Stocks\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{ paper: clsx(classes.drawerPaper) }}>\n        <Toolbar />\n        <Divider />\n        <div className={classes.drawerContainer}>\n          <List>{mainListItems}</List>\n        </div>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container className={classes.container}>\n            {props.children}          \n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 540,\n  },\n}));\n\n\nexport default function CustomGrid(props) {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Paper className={fixedHeightPaper}>\n          {props.children}\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\n","import { Dividend, CompanyProfile, StockMetric, MarketSymbols, GeneralMetrics, DividendsRatio, CompanyPeers} from \"./models\";\n\nconst URL = \"https://api.cheapstocks.app\"\nconst DIVIDENDS = \"dividends\"\nconst INFO = \"info\"\nconst METRICS = \"metrics\"\n\nfunction download_data(market: string, ticker: string, path: string) {\n\n  return fetch(`${URL}/markets/${market}/${path}/${ticker}.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_dividends(market: string, ticker: string): Promise<void | Dividend[] | null | undefined> {\n  return download_data(market, ticker, DIVIDENDS)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_info(market: string, ticker: string): Promise<void | CompanyProfile | null | undefined> {\n  return download_data(market, ticker, INFO)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_tickers(market: string): Promise<void | MarketSymbols[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/tickers.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_dividends_rate(market: string): Promise<void | DividendsRatio[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/dividendsRate.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_stock_metrics(market: string, ticker: string): Promise<void | StockMetric[] | null | undefined> {\n\n  return download_data(market, ticker, METRICS)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_metrics(market: string): Promise<void | GeneralMetrics[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/general_metrics.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_peers(market: string): Promise<void | CompanyPeers[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/peers.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}","import React, { useState, useEffect, useMemo } from 'react';\nimport { ResponsiveContainer, Scatter, ScatterChart, Tooltip, XAxis, YAxis } from 'recharts';\nimport { get_dividends_rate, get_peers } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport { CompanyPeers, DividendsRatio } from './models';\nimport CustomGrid from './template/CustomGrid';\nimport { makeStyles, Paper, Slider, Typography } from '@material-ui/core';\n\nexport interface DR extends DividendsRatio{\n  category: string\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n  },\n  input: {\n    width: 42,\n  },\n});\n\nconst INITIAL_LIMITS = [5, 25]\n\nexport default function MarketDividends() {\n  const [dividendRate, setDividendRate] = useState<DR[]>([]);\n  const [peers, setPeers] = useState<CompanyPeers[]>([]);\n  const params: { market: string } = useParams()\n  const classes = useStyles();\n  const [dividendsInterval, setDividendsInterval] = React.useState<number[]>(INITIAL_LIMITS);\n\n  const handleChange = (event: any, newValue: number | number[]) => {\n    setDividendsInterval(newValue as number[]);\n  };\n\n  useEffect(() => {\n    get_dividends_rate(params.market).then(response => {\n      let info = response as DR[]\n      setDividendRate(info)\n    })\n\n    get_peers(params.market).then(response => {\n      let info = response as CompanyPeers[]\n      setPeers(info)\n    })\n  }, [params.market])\n\n\n  useMemo(() => {\n    // add category for companies\n    for (let index = 0; index < dividendRate.length; index++){\n      // find companies and add finnhub industry\n      var peerGroup = peers.find(group => group.group.includes(dividendRate[index].name))\n      \n      if (peerGroup === undefined ){\n        continue\n      }\n\n      var companyAsPeer = peerGroup.peers.find(companyPeer => companyPeer.symbol === dividendRate[index].name)\n\n      if (companyAsPeer === undefined ){\n        continue\n      }\n      dividendRate[index].category = companyAsPeer?.info.finnhubIndustry\n    }\n\n  }, [dividendRate, peers]);\n\n  return (\n    <CustomGrid>\n      <Title>{params.market} biggest dividends</Title>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <ScatterChart\n          width={400}\n          height={400}\n          margin={{\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 20,\n          }}\n        >\n          <XAxis type=\"category\" dataKey=\"category\" allowDuplicatedCategory={false} />\n          <YAxis type=\"number\" dataKey=\"dividendsRatio\" name=\"ratio\" unit=\"%\" domain={dividendsInterval} allowDataOverflow={true}  />\n          <Tooltip content={<CustomTooltip />} />\n          <Scatter name=\"A school\" data={dividendRate} fill=\"#8884d8\">\n          </Scatter>\n        </ScatterChart>\n      </ResponsiveContainer>\n\n      <div className={classes.root}>\n      <Typography id=\"range-slider\" gutterBottom>\n        Dividends Range\n      </Typography>\n      <Slider\n        value={dividendsInterval}\n        onChange={handleChange}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby=\"range-slider\"\n        getAriaValueText={valuetext}\n      />\n    </div>\n    </CustomGrid>\n  )\n}\n\nfunction CustomTooltip(props: any, aaa: {}) {\n  let a = props as { payload: { payload: { name: string, dividendsRatio: number, category:string } }[] }\n\n  if ((a == null) || (a.payload == null) || (a.payload[0] == null)) {\n    return null\n  }\n  return (\n    <Paper elevation={3} >\n      <p className=\"label\">Name: {`${a.payload[0].payload.name}`}</p>\n      <p className=\"intro\">Dividend/Price ratio: {`${a.payload[0].payload.dividendsRatio.toFixed(1)}%`}</p>\n      <p className=\"intro\">Category: {`${a.payload[0].payload.category}`}</p>\n    </Paper>\n  );\n};\n\nfunction valuetext(value: number) {\n  return `${value}%`;\n}","import React, { useState, useEffect, useMemo } from 'react';\nimport { ResponsiveContainer, Scatter, ScatterChart, Tooltip, XAxis, YAxis } from 'recharts';\nimport { get_peers, get_metrics } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport CustomGrid from './template/CustomGrid';\nimport { CompanyPeers, GeneralMetrics } from './models';\nimport { createStyles, makeStyles, Paper, Slider, Theme, Typography } from '@material-ui/core';\n\n\nexport interface Metrics extends GeneralMetrics {\n  category: string\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: 250,\n    },\n    margin: {\n      height: theme.spacing(3),\n    },\n  }),\n);\n\n// change this dinamically\nconst THRESHOLD = 20\n\nexport default function MarketAnalysis() {\n  const [peRatio, setPeRate] = useState<Metrics[]>([]);\n  const [peers, setPeers] = useState<CompanyPeers[]>([]);\n  const params: { market: string } = useParams()\n  const [limit, setLimit] = useState<number>(THRESHOLD);\n\n  const handleChange = (event: any, value: number | number[]) => {\n    if (typeof (value) === \"number\") {\n      setLimit(value)\n    }\n  };\n\n  useEffect(() => {\n    get_metrics(params.market).then(response => {\n      let info = response as Metrics[]\n      setPeRate(info)\n    })\n\n    get_peers(params.market).then(response => {\n      let info = response as CompanyPeers[]\n      setPeers(info)\n    })\n  }, [params.market])\n\n  useMemo(() => {\n    // add category for companies\n    for (let index = 0; index < peRatio.length; index++) {\n      // find companies and add finnhub industry\n      var peerGroup = peers.find(group => group.group.includes(peRatio[index].name))\n\n      if (peerGroup === undefined) {\n        continue\n      }\n\n      var companyAsPeer = peerGroup.peers.find(companyPeer => companyPeer.symbol === peRatio[index].name)\n\n      if (companyAsPeer === undefined) {\n        continue\n      }\n      peRatio[index].category = companyAsPeer?.info.finnhubIndustry\n    }\n\n  }, [peRatio, peers]);\n\n  const classes = useStyles();\n\n  return (\n    <CustomGrid>\n      <Title>{params.market} smallest P/E</Title>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <ScatterChart\n          width={400}\n          height={400}\n          margin={{\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 20,\n          }}\n        >\n          <XAxis type=\"category\" dataKey=\"category\" allowDuplicatedCategory={false} />\n          <YAxis type=\"number\" dataKey=\"_peNormalizedAnnual\" name=\"ratio\" domain={[0, limit]} allowDataOverflow={true} />\n          <Tooltip content={<CustomTooltip />} />\n          <Scatter name=\"A school\" data={peRatio} fill=\"#8884d8\" />\n        </ScatterChart>\n      </ResponsiveContainer>\n      <div className={classes.root}>\n        <Typography id=\"track-inverted-slider\" gutterBottom>\n          Max P/E ratio\n        </Typography>\n        <Slider\n          track=\"inverted\"\n          aria-labelledby=\"track-inverted-slider\"\n          getAriaValueText={valuetext}\n          value={limit}\n          onChange={handleChange}\n          valueLabelDisplay=\"auto\"\n        />\n      </div>\n    </CustomGrid>\n  )\n}\n\nfunction CustomTooltip(props: any, aaa: {}) {\n  let a = props as { payload: { payload: Metrics }[] }\n\n  if ((a == null) || (a.payload == null) || (a.payload[0] == null)) {\n    return null\n  }\n  return (\n    <Paper elevation={3} >\n      <p className=\"label\">Name: {`${a.payload[0].payload.name}`}</p>\n      <p className=\"intro\">P/E Ratio: {`${a.payload[0].payload._peNormalizedAnnual.toFixed(1)}`}</p>\n      <p className=\"intro\">Capex Ratio: {`${a.payload[0].payload.capexNetIncomeRatio.toFixed(3)}`}</p>\n      <p className=\"intro\">ROE: {`${a.payload[0].payload._roeTTM.toFixed(1)}%`}</p>\n      <p className=\"intro\">Debt Ratio: {`${a.payload[0].payload.debtNetIncomeRatio.toFixed(1)}`}</p>\n      <p className=\"intro\">Category: {`${a.payload[0].payload.category}`}</p>\n    </Paper>\n  );\n};\n\nfunction valuetext(value: number) {\n  return `${value}%`;\n}","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { createStyles, Grid, makeStyles, Paper, Theme, Typography } from '@material-ui/core';\nimport { get_info } from './utils';\nimport { CompanyProfile } from './models';\nimport Title from './template/Title';\n\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        paper: {\n            padding: theme.spacing(1),\n            textAlign: 'center',\n            color: theme.palette.text.secondary,\n        },\n        main: {\n            height: 870,\n            padding: theme.spacing(1),\n            textAlign: 'center',\n            color: theme.palette.text.primary,\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        insights: {\n            height: 274,\n            padding: theme.spacing(1),\n            textAlign: 'center',\n            color: theme.palette.text.primary,\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        container: {\n            paddingBottom: theme.spacing(3),\n            paddingRight: theme.spacing(3)\n        },\n    }),\n);\n\nexport default function Stock() {\n    const params: { market: string, stock: string } = useParams()\n    const [companyProfile, setcompanyProfile] = useState<CompanyProfile>();\n\n    useEffect(() => {\n        get_info(params.market, params.stock).then(response => {\n            let resp = response as CompanyProfile;\n            if (resp !== undefined) {\n                setcompanyProfile(resp)\n            }\n        })\n    }, [params.market, params.stock])\n\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <Grid container direction=\"row\">\n                <Grid item xs={8} className={classes.container}>\n                    <Grid container direction=\"column\">\n                        <Grid item >\n                            <Paper className={classes.main}>\n                                <Title>{params.stock}</Title>\n                                <Typography variant=\"body2\" color=\"inherit\">\n                                    {companyProfile?.description}\n                                </Typography>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <Grid item xs={4}>\n                    <Grid container direction=\"column\" className={classes.container}>\n                        <Grid item >\n                            <Paper className={classes.insights}>\n                                <Title>Balance Sheet insights</Title>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n\n                    <Grid container direction=\"column\" className={classes.container}>\n                        <Grid item >\n                            <Paper className={classes.insights}>\n                                <Title>Income Statement insights</Title>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n\n                    <Grid container direction=\"column\" className={classes.container}>\n                        <Grid item>\n                            <Paper className={classes.insights}>\n                                <Title>Cash Flow insights</Title>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { HashRouter as Router, Switch, Route, } from \"react-router-dom\";\n\nimport Dashboard from './template/Dashboard';\nimport Market from './Market';\nimport DividensChart from './Dividends';\nimport MarketDividends from './MarketDividends';\nimport MarketAnalysis from './MarketAnalysis';\nimport Stock from './Stock';\n\nrender(\n  <React.Fragment>\n    <Dashboard>\n      <Router >\n        <Switch>\n          <Route exact path=\"/market/:market/dividends/:id\" component={DividensChart} />\n          <Route exact path=\"/market/:market\" component={Market} />\n          <Route exact path=\"/market/:market/dividends\" component={MarketDividends} />\n          <Route exact path=\"/market/:market/analysis\" component={MarketAnalysis} />\n          <Route exact path=\"/market/:market/:stock\" component={Stock} />\n        </Switch>\n      </Router>\n    </Dashboard>\n  </React.Fragment>,\n  document.getElementById('root'),\n);","import React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Dividend } from \"./models\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { get_dividends } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport CustomGrid from './template/CustomGrid';\n\nexport default function DividensChart() {\n  const [data, setData] = useState<Dividend[]>([]);\n  const [currency, setCurrency] = useState<string>(\"$\");\n  const params: { market: string, id: string } = useParams()\n  const theme = useTheme()\n\n  useEffect(() => {\n    get_dividends(params.market, params.id).then(response => {\n      let dividends = response as Dividend[]\n      let index = 0\n      while (typeof dividends[index + 1] !== 'undefined') {\n        let currentYear = new Date(dividends[index].date).getFullYear()\n        let nextYear = new Date(dividends[index + 1].date).getFullYear()\n        dividends[index].date = currentYear.toString()\n        if (currentYear === nextYear) {\n          dividends[index].adjustedAmount = dividends[index].adjustedAmount + dividends[index + 1].adjustedAmount\n          dividends.splice(index + 1, 1);\n        }\n        index = index + 1\n      }\n      setData(dividends)\n\n      if (dividends.length > 0) {\n        setCurrency(dividends[0].currency)\n      }\n\n    })\n  }, [params.id, params.market])\n\n\n  return (\n      <CustomGrid>\n        <Title>{params.id} dividends historical</Title>\n        <ResponsiveContainer>\n          <LineChart\n            width={500}\n            height={300}\n            data={data}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5\n            }}\n          >\n            <XAxis dataKey=\"date\" tickFormatter={d => `${new Date(d).getFullYear().toString()}`} stroke={theme.palette.text.secondary} />\n            <YAxis dataKey=\"adjustedAmount\" tickFormatter={d => `${currency} ${d}`} stroke={theme.palette.text.secondary} />\n            <Tooltip />\n            <Legend />\n            <Line\n              type=\"monotone\"\n              dataKey=\"adjustedAmount\"\n              name=\"Dividends\"\n              stroke={theme.palette.primary.main}\n              dot={false}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </CustomGrid>)\n}","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport CustomGrid from './template/CustomGrid';\nimport { Grid, Link, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport { ResponsiveContainer } from 'recharts';\n\n\nexport default function Market() {\n    const params: { market: string } = useParams()\n\n    return (\n        <CustomGrid>\n            <Title>{params.market} market insights</Title>\n            <ResponsiveContainer>\n                <Grid container >\n                    <Grid item xs>\n                        <ListItem button component={Link} href={`/#/market/${params.market}/dividends`}>\n                            <ListItemIcon>\n                                <MonetizationOnIcon style={{ fontSize: 120 }} />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Dividends\" />\n                        </ListItem>\n                    </Grid >\n                    <Grid item xs>\n                        <ListItem button component={Link} href={`/#/market/${params.market}/analysis`}>\n                            <ListItemIcon>\n                                <TrendingUpIcon style={{ fontSize: 120 }} />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Cheap Value Stocks\" />\n                        </ListItem>\n                    </Grid >\n                </Grid >\n            </ResponsiveContainer>\n        </CustomGrid>)\n}"],"sourceRoot":""}