{"version":3,"sources":["utils.tsx","template/Title.js","template/listitems.js","template/Dashboard.js","index.tsx","Dividends.tsx","HistoricalPrice.tsx","MarketDividends.tsx","MarketAnalysis.tsx"],"names":["URL","window","location","origin","download_data","market","ticker","path","fetch","method","then","response","json","data","catch","error","console","get_info","log","Title","props","Typography","component","variant","color","gutterBottom","children","mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","classes","React","useState","open","setOpen","fixedHeightPaper","clsx","className","CssBaseline","AppBar","Toolbar","IconButton","edge","onClick","noWrap","Drawer","Divider","List","Container","Grid","item","xs","Paper","render","Fragment","exact","setData","currency","setCurrency","params","useParams","useTheme","useEffect","id","dividends","index","Date","getFullYear","Dividends","splice","ResponsiveContainer","LineChart","margin","top","right","left","bottom","XAxis","dataKey","tickFormatter","d","toString","stroke","palette","text","secondary","YAxis","Tooltip","Legend","Line","type","name","main","dot","prices","push","x","toLocaleDateString","y","Close","dividendRate","setDividendRate","newArray","map","pc","Number","toFixed","sort","a","b","Treemap","aspectRatio","fill","peRate","setPeRate","priceEarningComparison","document","getElementById"],"mappings":"mPAEMA,EAAMC,OAAOC,SAASC,OAK5B,SAASC,EAAcC,EAAgBC,EAAgBC,GAErD,OAAOC,MAAM,GAAD,OAAIR,EAAJ,oBAAmBK,EAAnB,YAA6BE,EAA7B,YAAqCD,EAArC,SAAoD,CAC9DG,OAAQ,QAEPC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,OAAOA,KAERC,OAAM,SAACC,GACNC,QAAQD,MAAM,SAAUA,MA4BvB,SAASE,EAASZ,EAAgBC,GACvC,OAAOF,EAAcC,EAAQC,EA1ClB,QA2CRI,MAAK,SAAAC,GACJ,GAAgB,MAAZA,EACF,OAAOA,KAGVG,OAAM,SAAAC,GACLC,QAAQE,IAAIH,M,4BCjDH,SAASI,EAAMC,GAC5B,OACE,cAACC,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,UAAUC,cAAY,EAApE,SACGL,EAAMM,W,8TCGAC,GACX,gCACE,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,iBAExB,eAACJ,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,cAExB,eAACJ,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,iBAExB,eAACJ,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,eAExB,eAACJ,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,uBCnBtBC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,QAAS,CACPC,aAAc,IAEhBC,YAAY,aACVH,QAAS,OACTI,WAAY,SACZC,eAAgB,WAChBC,QAAS,SACNR,EAAMS,OAAON,SAElBO,OAAQ,CACNC,OAAQX,EAAMW,OAAOC,OAAS,EAC9BC,WAAYb,EAAMc,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,WAxBgB,IAyBhBC,MAAM,eAAD,OAzBW,IAyBX,OACLT,WAAYb,EAAMc,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASK,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,iBAAkB,CAChBxB,QAAS,QAEXyB,MAAO,CACLC,SAAU,GAEZC,YAAa,CACXC,SAAU,WACVC,WAAY,SACZT,MA3CgB,IA4ChBT,WAAYb,EAAMc,YAAYC,OAAO,QAAS,CAC5CC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASK,kBAGzCS,iBAAiB,aACfC,UAAW,SACXpB,WAAYb,EAAMc,YAAYC,OAAO,QAAS,CAC5CC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASC,gBAEvCG,MAAOtB,EAAMkC,QAAQ,IACpBlC,EAAMmC,YAAYC,GAAG,MAAQ,CAC5Bd,MAAOtB,EAAMkC,QAAQ,KAGzBG,aAAcrC,EAAMS,OAAON,QAC3BmC,QAAS,CACPV,SAAU,EACVW,OAAQ,QACRC,SAAU,QAEZC,UAAW,CACTC,WAAY1C,EAAMkC,QAAQ,GAC1BS,cAAe3C,EAAMkC,QAAQ,IAE/BU,MAAO,CACLpC,QAASR,EAAMkC,QAAQ,GACvBhC,QAAS,OACTsC,SAAU,OACVK,cAAe,UAEjBC,YAAa,CACXP,OAAQ,SAKG,SAASQ,GAAU9D,GAChC,IAAM+D,EAAUlD,KAChB,EAAwBmD,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KAOMC,EAAmBC,YAAKN,EAAQJ,MAAOI,EAAQF,aAErD,OACE,sBAAKS,UAAWP,EAAQ/C,KAAxB,UACE,cAACuD,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQ3B,SAAS,WAAWyB,UAAWD,YAAKN,EAAQtC,OAAQyC,GAAQH,EAAQ5B,aAA5E,SACE,eAACsC,EAAA,EAAD,CAASH,UAAWP,EAAQ7C,QAA5B,UACE,cAACwD,EAAA,EAAD,CACEC,KAAK,QACLvE,MAAM,UACN,aAAW,cACXwE,QAjBe,WACvBT,GAAQ,IAiBAG,UAAWD,YAAKN,EAAQxB,WAAY2B,GAAQH,EAAQtB,kBALtD,SAOE,cAAC,IAAD,MAEF,cAACxC,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,UAAUyE,QAAM,EAACP,UAAWP,EAAQrB,MAAlF,qCAKJ,eAACoC,EAAA,EAAD,CACE3E,QAAQ,YACR4D,QAAS,CACPJ,MAAOU,YAAKN,EAAQnB,aAAcsB,GAAQH,EAAQhB,mBAEpDmB,KAAMA,EALR,UAOE,qBAAKI,UAAWP,EAAQ3C,YAAxB,SACE,cAACsD,EAAA,EAAD,CAAYE,QAhCM,WACxBT,GAAQ,IA+BF,SACE,cAAC,IAAD,QAGJ,cAACY,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UAAOzE,QAET,uBAAM+D,UAAWP,EAAQV,QAAzB,UACE,qBAAKiB,UAAWP,EAAQX,eACxB,cAAC6B,EAAA,EAAD,CAAWX,UAAWP,EAAQP,UAA9B,SACE,cAAC0B,EAAA,EAAD,CAAM1B,WAAS,EAACP,QAAS,EAAzB,SAEE,cAACiC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CAAOf,UAAWF,EAAlB,SACCpE,EAAMM,uBChJrBgF,iBACE,cAAC,IAAMC,SAAP,UACE,cAAC,GAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACrG,KAAK,yBAAyBe,UCNtC,WACb,MAAwB+D,mBAA4B,IAApD,mBAAOxE,EAAP,KAAagG,EAAb,KACA,EAAgCxB,mBAAiB,KAAjD,mBAAOyB,EAAP,KAAiBC,EAAjB,KACMC,EAAyCC,cACzC9E,EAAQ+E,cAwBd,OAtBAC,qBAAU,WLOL,IAAuB9G,EAAgBC,GAAhBD,EKNZ2G,EAAO3G,OLMqBC,EKNb0G,EAAOI,GLO/BhH,EAAcC,EAAQC,EAnBb,aAoBbI,MAAK,SAAAC,GACJ,GAAgB,MAAZA,EACF,OAAOA,KAGVG,OAAM,SAAAC,GACLC,QAAQE,IAAIH,OKd0BL,MAAK,SAAAC,GAG3C,IAFA,IAAI0G,EAAY1G,EACZ2G,EAAQ,EACyB,qBAAvBD,EAAUC,EAAM,IAAoB,CAC9B,IAAIC,KAAKF,EAAUC,GAAOC,MAAMC,gBACnC,IAAID,KAAKF,EAAUC,EAAM,GAAGC,MAAMC,gBAE/CH,EAAUC,GAAOG,UAAYJ,EAAUC,GAAOG,UAAYJ,EAAUC,EAAM,GAAGG,UAC7EJ,EAAUK,OAAOJ,EAAM,EAAG,IAE5BA,GAAe,EAEjBT,EAAQQ,MAEVpG,EAAS+F,EAAO3G,OAAQ2G,EAAOI,IAAI1G,MAAK,SAAAC,GAEtCoG,EADWpG,EACMmG,eAElB,CAACE,EAAOI,GAAIJ,EAAO3G,SAIpB,eAAC,IAAMsG,SAAP,WACE,eAACxF,EAAD,WAAQ6F,EAAOI,GAAf,2BACA,cAACO,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CACEnE,MAAO,IACPiB,OAAQ,IACR7D,KAAMA,EACNgH,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GARZ,UAWE,cAACC,EAAA,EAAD,CAAOC,QAAQ,OAAOC,cAAe,SAAAC,GAAC,gBAAO,IAAId,KAAKc,GAAGb,cAAcc,aAAeC,OAAQpG,EAAMqG,QAAQC,KAAKC,YACjH,cAACC,EAAA,EAAD,CAAOR,QAAQ,YAAYC,cAAe,SAAAC,GAAC,gBAAOvB,EAAP,YAAmBuB,IAAKE,OAAQpG,EAAMqG,QAAQC,KAAKC,YAC9F,cAACE,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACEC,KAAK,WACLZ,QAAQ,YACRa,KAAK,YACLT,OAAQpG,EAAMqG,QAAQxG,QAAQiH,KAC9BC,KAAK,eD7CP,cAAC,IAAD,CAAOtC,OAAK,EAACrG,KAAK,qBAAqBe,UEPlC,SAAyBF,GACtC,MAAwBiE,mBAAqC,IAA7D,mBAAOxE,EAAP,KAAagG,EAAb,KACA,EAAgCxB,mBAAiB,KAAjD,mBAAOyB,EAAP,KAAiBC,EAAjB,KACMC,EAASC,cACT9E,EAAQ+E,cAsBd,OArBAC,qBAAU,WNoBL,IAA8B9G,EAAgBC,GAAhBD,EMnBZ2G,EAAO3G,ONmBqBC,EMnBb0G,EAAOI,GNoBtChH,EAAcC,EAAQC,EA7BhB,UA8BVI,MAAK,SAAAC,GACJ,GAAgB,MAAZA,EACF,OAAOA,KAGVG,OAAM,SAAAC,GACLC,QAAQE,IAAIH,OM3BiCL,MAAK,SAAAC,GAClD,IAD8D,EAC1DwI,EAASxI,EACTE,EAAO,GAFmD,cAI7CsI,GAJ6C,IAI9D,2BAAyB,CAAC,IAAjB5C,EAAgB,QACnB8B,EAAI,IAAId,KAAKhB,EAAKgB,MACtB1G,EAAKuI,KAAK,CACRC,EAAGhB,EAAEiB,qBACLC,EAAGhD,EAAKiD,SARkD,8BAW9D3C,EAAQhG,MAGVI,EAAS+F,EAAO3G,OAAQ2G,EAAOI,IAAI1G,MAAK,SAAAC,GAEtCoG,EADWpG,EACMmG,eAElB,CAACE,EAAOI,GAAIJ,EAAO3G,SAGpB,eAAC,IAAMsG,SAAP,WACA,eAACxF,EAAD,WAAQ6F,EAAOI,GAAf,2BACE,cAACO,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CACEnE,MAAO,IACPiB,OAAQ,IACR7D,KAAMA,EACNgH,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GARZ,UAWK,cAACC,EAAA,EAAD,CAAOC,QAAQ,IAAII,OAAQpG,EAAMqG,QAAQC,KAAKC,YACjD,cAACC,EAAA,EAAD,CAAOP,cAAe,SAAAC,GAAC,gBAAOvB,EAAP,YAAmBuB,MAC1C,cAACO,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACEC,KAAK,WACLZ,QAAQ,IACRa,KAAK,mBACLT,OAAQpG,EAAMqG,QAAQxG,QAAQiH,KAC9BC,KAAK,eF1CP,cAAC,IAAD,CAAOtC,OAAK,EAACrG,KAAK,4BAA4Be,UGVzC,WACb,MAAwC+D,mBAAgD,IAAxF,mBAAOoE,EAAP,KAAqBC,EAArB,KACM1C,EAA6BC,cAiBnC,OAfAE,qBAAU,WP6DL,IAA4B9G,KO5DZ2G,EAAO3G,OP8DrBG,MAAM,GAAD,OAAIR,EAAJ,oBAAmBK,EAAnB,kBAA2C,CACrDI,OAAQ,QAEPC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,OAAOA,KAERC,OAAM,SAACC,GACNC,QAAQD,MAAM,SAAUA,OOtEQL,MAAK,SAAAC,GACrC,IACMgJ,EADKhJ,EACWiJ,KAAI,SAAArD,GACxB,IAAIsD,EAAKC,QAA4B,IAApBvD,EAAKkD,cAAoBM,QAAQ,IAClD,MAAO,CAAEf,KAAK,GAAD,OAAKzC,EAAKjG,OAAV,YAAoBuJ,EAApB,KAA2BxC,UAAWwC,MAGrDH,EAAgBC,EAASK,MAAK,SAAUC,EAAGC,GACzC,IAAIb,EAAIY,EAAC,UAAmBV,EAAIW,EAAC,UACjC,OAASb,EAAIE,GAAM,EAAMF,EAAIE,EAAK,EAAI,WAGzC,CAACvC,EAAO3G,SAGT,eAAC,IAAMsG,SAAP,WACE,eAACxF,EAAD,WAAQ6F,EAAO3G,OAAf,wBACA,cAACsH,EAAA,EAAD,CAAqBlE,MAAM,OAAOiB,OAAO,OAAzC,SACE,cAACyF,EAAA,EAAD,CAAS1G,MAAO,IAAKiB,OAAQ,IAAK7D,KAAM4I,EAActB,QAAQ,YAAYiC,YAAa,EAAI,EAAG7B,OAAO,OAAO8B,KAAK,oBHZ/G,cAAC,IAAD,CAAOzD,OAAK,EAACrG,KAAK,2BAA2Be,UIXxC,WACb,MAA4B+D,mBAA6D,IAAzF,mBAAOiF,EAAP,KAAeC,EAAf,KACMvD,EAA6BC,cAgBnC,OAdAE,qBAAU,WR2EL,IAAqB9G,KQ1EZ2G,EAAO3G,OR4EdG,MAAM,GAAD,OAAIR,EAAJ,oBAAmBK,EAAnB,2BAAoD,CAC9DI,OAAQ,QAEPC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,OAAOA,KAERC,OAAM,SAACC,GACNC,QAAQD,MAAM,SAAUA,OQpFCL,MAAK,SAAAC,GAC9B,IACMgJ,EADKhJ,EACWiJ,KAAI,SAAArD,GACxB,MAAO,CAAEyC,KAAK,GAAD,OAAKzC,EAAKjG,OAAV,YAAoBiG,EAAKiE,uBAAuBT,QAAQ,GAAxD,KAA+DS,uBAAwB,EAAEjE,EAAKiE,2BAG7GD,EAAUZ,EAASK,MAAK,SAAUC,EAAGC,GACnC,IAAIb,EAAIY,EAAC,uBAAgCV,EAAIW,EAAC,uBAC9C,OAASb,EAAIE,GAAM,EAAMF,EAAIE,EAAK,EAAI,WAGzC,CAACvC,EAAO3G,SAGT,eAAC,IAAMsG,SAAP,WACE,eAACxF,EAAD,WAAQ6F,EAAO3G,OAAf,mBACA,cAACsH,EAAA,EAAD,CAAqBlE,MAAM,OAAOiB,OAAO,OAAzC,SACE,cAACyF,EAAA,EAAD,CAAS1G,MAAO,IAAKiB,OAAQ,IAAK7D,KAAMyJ,EAAQnC,QAAQ,yBAAyBiC,YAAa,EAAI,EAAG7B,OAAO,OAAO8B,KAAK,6BJN9HI,SAASC,eAAe,W","file":"static/js/main.944dea2e.chunk.js","sourcesContent":["import { DividendsEntity, HistoricalPriceEntity, Info } from \"./models\";\n\nconst URL = window.location.origin\nconst DIVIDENDS = \"dividends\"\nconst INFO = \"info\"\nconst PRICES = \"prices\"\n\nfunction download_data(market: string, ticker: string, path: string) {\n\n  return fetch(`${URL}/markets/${market}/${path}/${ticker}.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_dividends(market: string, ticker: string): Promise<void | DividendsEntity[] | null | undefined> {\n  return download_data(market, ticker, DIVIDENDS)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_historical_price(market: string, ticker: string): Promise<void | HistoricalPriceEntity[] | null | undefined> {\n  return download_data(market, ticker, PRICES)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_info(market: string, ticker: string): Promise<void | Info | null | undefined> {\n  return download_data(market, ticker, INFO)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_tickers(market: string): Promise<void | string[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/tickers`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_dividends_rate(market: string): Promise<void | {ticker: string, dividendRate: number}[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/dividendsRate`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_pe_rate(market: string): Promise<void | {ticker: string, priceEarningComparison: number}[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/priceEarningComparison`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Orders\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Customers\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Reports\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Integrations\" />\n    </ListItem>\n  </div>\n);\n\n\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { mainListItems } from './listitems.js';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 540,\n  },\n}));\n\n\nexport default function Dashboard(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Visualizing Stocks\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12}>\n              <Paper className={fixedHeightPaper}>\n              {props.children}\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport DividensChart from './Dividends';\nimport HistoricalPrice from './HistoricalPrice';\nimport MarketDividends from './MarketDividends';\nimport MarketAnalysis from './MarketAnalysis';\n\nimport { HashRouter as Router, Switch, Route, } from \"react-router-dom\";\nimport Dashboard from './template/Dashboard';\nrender(\n  <React.Fragment>\n    <Dashboard>\n      <Router >\n        <Switch>\n          <Route exact path=\"/dividends/:market/:id\" component={DividensChart} />\n          <Route exact path=\"/price/:market/:id\" component={HistoricalPrice} />\n          <Route exact path=\"/market/dividends/:market\" component={MarketDividends} />\n          <Route exact path=\"/market/analysis/:market\" component={MarketAnalysis} />\n        </Switch>\n      </Router>\n    </Dashboard>\n  </React.Fragment>,\n  document.getElementById('root'),\n);","import React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { DividendsEntity, Info } from \"./models\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { get_dividends, get_info } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\n\nexport default function DividensChart() {\n  const [data, setData] = useState<DividendsEntity[]>([]);\n  const [currency, setCurrency] = useState<string>(\"$\");\n  const params: { market: string, id: string } = useParams()\n  const theme = useTheme()\n\n  useEffect(() => {\n    get_dividends(params.market, params.id).then(response => {\n      let dividends = response as DividendsEntity[]\n      let index = 0\n      while (typeof dividends[index+1] !== 'undefined') {\n        let currentYear = new Date(dividends[index].Date).getFullYear()\n        let nextYear = new Date(dividends[index+1].Date).getFullYear()\n        if (currentYear === nextYear) {\n          dividends[index].Dividends = dividends[index].Dividends + dividends[index+1].Dividends\n          dividends.splice(index+1, 1);\n        }\n        index = index +1 \n      }\n      setData(dividends)\n    })\n    get_info(params.market, params.id).then(response => {\n      let info = response as Info\n      setCurrency(info.currency)\n    })\n  }, [params.id, params.market])\n\n\n  return (\n    <React.Fragment>\n      <Title>{params.id} dividends historical</Title>\n      <ResponsiveContainer>\n        <LineChart\n          width={500}\n          height={300}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          }}\n        >\n          <XAxis dataKey=\"Date\" tickFormatter={d => `${new Date(d).getFullYear().toString()}`}  stroke={theme.palette.text.secondary}/>\n          <YAxis dataKey=\"Dividends\" tickFormatter={d => `${currency} ${d}`} stroke={theme.palette.text.secondary}/>\n          <Tooltip />\n          <Legend />\n          <Line\n            type=\"monotone\"\n            dataKey=\"Dividends\"\n            name=\"Dividends\"\n            stroke={theme.palette.primary.main}\n            dot={false}\n          />\n\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>)\n}","import React, { useState, useEffect } from 'react';\nimport { HistoricalPriceEntity, Info } from \"./models\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { get_historical_price, get_info } from './utils';\nimport { useParams } from 'react-router-dom';\nimport { useTheme } from '@material-ui/core/styles';\nimport Title from './template/Title';\n\nexport default function HistoricalPrice(props:any) {\n  const [data, setData] = useState<{ x: string, y: number }[]>([]);\n  const [currency, setCurrency] = useState<string>(\"$\");\n  const params = useParams<{ id: string, market: string }>();\n  const theme = useTheme()\n  useEffect(() => {\n    get_historical_price(params.market, params.id).then(response => {\n      let prices = response as HistoricalPriceEntity[]\n      var data = []\n      // convert date\n      for (let item of prices) {\n        let d = new Date(item.Date)\n        data.push({\n          x: d.toLocaleDateString(),\n          y: item.Close,\n        })\n      }\n      setData(data)\n    })\n\n    get_info(params.market, params.id).then(response => {\n      let info = response as Info\n      setCurrency(info.currency)\n    })\n  }, [params.id, params.market])\n\n  return (\n    <React.Fragment>\n    <Title>{params.id} dividends historical</Title>\n      <ResponsiveContainer>\n        <LineChart\n          width={800}\n          height={600}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          }}\n        >\n             <XAxis dataKey=\"x\" stroke={theme.palette.text.secondary}/>\n          <YAxis tickFormatter={d => `${currency} ${d}`} />\n          <Tooltip />\n          <Legend />\n          <Line\n            type=\"monotone\"\n            dataKey=\"y\"\n            name=\"Historical Price\"\n            stroke={theme.palette.primary.main}\n            dot={false}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n      </React.Fragment>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport { ResponsiveContainer, Treemap } from 'recharts';\nimport { get_dividends_rate } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\n\nexport default function MarketDividends() {\n  const [dividendRate, setDividendRate] = useState<{ name: string, dividends: number }[]>([]);\n  const params: { market: string } = useParams()\n\n  useEffect(() => {\n    get_dividends_rate(params.market).then(response => {\n      let info = response as { ticker: string; dividendRate: number }[]\n      const newArray = info.map(item => {\n        let pc = Number((item.dividendRate * 100).toFixed(2))\n        return { name: `${item.ticker} ${pc}%`, dividends: pc };\n      });\n\n      setDividendRate(newArray.sort(function (a, b) {\n        var x = a[\"dividends\"]; var y = b[\"dividends\"];\n        return ((x > y) ? -1 : ((x < y) ? 1 : 0));\n      }))\n    })\n  }, [params.market])\n\n  return (\n    <React.Fragment>\n      <Title>{params.market} biggest dividends</Title>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <Treemap width={400} height={200} data={dividendRate} dataKey=\"dividends\" aspectRatio={4 / 3} stroke=\"#fff\" fill=\"#8884d8\" />\n      </ResponsiveContainer>\n    </React.Fragment>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { ResponsiveContainer, Treemap } from 'recharts';\nimport {  get_pe_rate } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\n\nexport default function MarketAnalysis() {\n  const [peRate, setPeRate] = useState<{ name: string, priceEarningComparison: number }[]>([]);\n  const params: { market: string } = useParams()\n\n  useEffect(() => {\n    get_pe_rate(params.market).then(response => {\n      let info = response as { ticker: string; priceEarningComparison: number }[]\n      const newArray = info.map(item => {\n        return { name: `${item.ticker} ${item.priceEarningComparison.toFixed(2)}%`, priceEarningComparison: 1/item.priceEarningComparison };\n      });\n\n      setPeRate(newArray.sort(function (a, b) {\n        var x = a[\"priceEarningComparison\"]; var y = b[\"priceEarningComparison\"];\n        return ((x > y) ? -1 : ((x < y) ? 1 : 0));\n      }))\n    })\n  }, [params.market])\n\n  return (\n    <React.Fragment>\n      <Title>{params.market} smallest P/E</Title>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <Treemap width={400} height={200} data={peRate} dataKey=\"priceEarningComparison\" aspectRatio={4 / 3} stroke=\"#fff\" fill=\"#8884d8\" />\n      </ResponsiveContainer>\n\n    </React.Fragment>\n  )\n}\n"],"sourceRoot":""}