{"version":3,"sources":["template/listitems.js","utils.tsx","template/Dashboard.js","template/Title.js","template/CustomGrid.js","MarketDividends.tsx","MarketAnalysis.tsx","Stock.tsx","index.tsx","Dividends.tsx","Market.tsx"],"names":["mainListItems","ListItem","button","component","Link","href","ListItemIcon","code","height","ListItemText","primary","URL","download_data","market","ticker","path","fetch","method","then","response","json","data","catch","error","console","get_peers","get_all_symbols","markets","tickers","forEach","get_tickers","push","symbol","description","useStyles","makeStyles","theme","root","display","toolbarIcon","alignItems","justifyContent","padding","mixins","toolbar","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","title","flexGrow","width","flexShrink","drawerPaper","drawerContainer","overflow","appBarSpacer","content","container","paddingTop","spacing","paddingBottom","window","location","origin","Dashboard","props","useState","open","setOpen","items","setItems","setMarkets","classes","useEffect","resp","useMemo","className","CssBaseline","AppBar","position","clsx","Toolbar","Typography","variant","color","noWrap","Autocomplete","autoHighlight","id","style","backgroundColor","onOpen","onClose","getOptionSelected","option","value","getOptionLabel","options","onChange","event","newValue","undefined","redirect","renderInput","params","TextField","label","InputProps","Drawer","paper","Divider","List","Container","children","Title","gutterBottom","flexDirection","fixedHeight","CustomGrid","fixedHeightPaper","Grid","item","xs","Paper","input","INITIAL_LIMITS","CustomTooltip","aaa","a","payload","elevation","name","dividendsRatio","toFixed","category","valuetext","createStyles","margin","_peNormalizedAnnual","_grossMarginTTM","_netProfitMarginTTM","_roeTTM","debtNetIncomeRatio","textAlign","palette","text","secondary","main","insights","paddingRight","render","Fragment","exact","setData","currency","setCurrency","useParams","useTheme","log","dividends","index","currentYear","Date","date","getFullYear","nextYear","toString","adjustedAmount","splice","length","ResponsiveContainer","LineChart","top","right","left","bottom","XAxis","dataKey","tickFormatter","d","stroke","YAxis","Tooltip","Legend","Line","type","dot","fontSize","dividendRate","setDividendRate","peers","setPeers","React","dividendsInterval","setDividendsInterval","peerGroup","find","group","includes","companyAsPeer","companyPeer","finnhubIndustry","ScatterChart","allowDuplicatedCategory","unit","domain","allowDataOverflow","Scatter","fill","onClick","ev","redirectStock","Slider","valueLabelDisplay","getAriaValueText","peRatio","setPeRate","limit","setLimit","minTickGap","track","companyProfile","setcompanyProfile","stock","direction","document","getElementById"],"mappings":"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","file":"static/js/main.0794f550.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Flag from 'react-world-flags'\nimport Link from '@material-ui/core/Link';\n\n\nexport const mainListItems = (\n  <div>\n    <ListItem button component={Link} href=\"/#/market/ST\">\n      <ListItemIcon>\n        <Flag code=\"swe\" height=\"16\" />\n      </ListItemIcon>\n      <ListItemText primary=\"Sweden\" />\n    </ListItem>\n    <ListItem button component={Link} href=\"/#/market/CO\">\n      <ListItemIcon>\n        <Flag code=\"dnk\" height=\"16\" />\n      </ListItemIcon>\n      <ListItemText primary=\"Denmark\" />\n    </ListItem>\n    <ListItem button component={Link} href=\"/#/market/HE\">\n      <ListItemIcon>\n        <Flag code=\"fin\" height=\"16\" />\n      </ListItemIcon>\n      <ListItemText primary=\"Finland\" />\n    </ListItem>\n    <ListItem button component={Link} href=\"/#/market/IC\">\n      <ListItemIcon>\n        <Flag code=\"isl\" height=\"16\" />\n      </ListItemIcon>\n      <ListItemText primary=\"Iceland\" />\n    </ListItem>\n  </div>\n);\n\n\n","import { Dividend, CompanyProfile, StockMetric, MarketSymbols, GeneralMetrics, DividendsRatio, CompanyPeers} from \"./models\";\n\nconst URL = \"https://api.cheapstocks.app\"\nconst DIVIDENDS = \"dividends\"\nconst INFO = \"info\"\nconst METRICS = \"metrics\"\n\nfunction download_data(market: string, ticker: string, path: string) {\n\n  return fetch(`${URL}/markets/${market}/${path}/${ticker}.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_dividends(market: string, ticker: string): Promise<void | Dividend[] | null | undefined> {\n  return download_data(market, ticker, DIVIDENDS)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_info(market: string, ticker: string): Promise<void | CompanyProfile | null | undefined> {\n  return download_data(market, ticker, INFO)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_tickers(market: string): Promise<void | MarketSymbols[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/tickers.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_dividends_rate(market: string): Promise<void | DividendsRatio[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/dividendsRate.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_stock_metrics(market: string, ticker: string): Promise<void | StockMetric[] | null | undefined> {\n\n  return download_data(market, ticker, METRICS)\n    .then(response => {\n      if (response != null) {\n        return response\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n\nexport function get_metrics(market: string): Promise<void | GeneralMetrics[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/general_metrics.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_peers(market: string): Promise<void | CompanyPeers[] | null | undefined> {\n\n  return fetch(`${URL}/markets/${market}/peers.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_markets(): Promise<void | string[] | null | undefined> {\n\n  return fetch(`${URL}/markets.json`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\nexport function get_all_symbols(markets: string[]): {symbol: string, market: string, description: string}[] {\n\n  let tickers = [] as {symbol: string, market: string, description: string}[]\n  markets.forEach(market => {\n    get_tickers(market).then(response => {\n      let resp = response as MarketSymbols[]\n      resp.forEach(ticker  => {\n        tickers.push({\n          symbol: ticker.symbol,\n          description: ticker.description,\n          market: market,\n        })\n      });\n      tickers.push({\n        symbol: market,\n        market: market,\n        description: `${market} Exchange`\n      })\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n      return tickers\n    });;\n  })\n\n  return tickers\n}","import { React, useState, useEffect, useMemo } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Container from '@material-ui/core/Container';\nimport { mainListItems } from './listitems.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport { get_all_symbols, get_markets } from '../utils.tsx';\n\nconst drawerWidth = 180;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\n\nconst URL = window.location.origin\n\nfunction redirect(event) {\n  if ((event?.market === undefined) || (event?.symbol === undefined)) {\n    return\n  }\n  if (event.market === event.symbol) {\n    window.location.href = `/#/market/${event.market}`\n    return\n  } \n  window.location.href = `/#/market/${event.market}/${event.symbol}`\n}\n\nexport default function Dashboard(props) {\n  const [open, setOpen] = useState(false);\n  const [items, setItems] = useState([]);\n  const [markets, setMarkets] = useState([]);\n  const classes = useStyles();\n\n  useEffect(() => {\n    // download markets\n    get_markets().then(resp => {\n      setMarkets(resp)\n    })\n  }, [])\n\n  useMemo(() => {\n    setItems(get_all_symbols(markets))\n  }, [markets]);\n\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar)}>\n        <Toolbar>\n          <Typography component=\"h1\" href={URL} variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Visualizing Stocks\n          </Typography>\n          <Autocomplete\n            autoHighlight\n            id=\"stocks_search\"\n            style={{ width: '30%', backgroundColor: '#FFFFFF', height: '30%' }}\n            open={open}\n            onOpen={() => { setOpen(true) }}\n            onClose={() => { setOpen(false) }}\n            getOptionSelected={(option, value) => option.symbol === value.symbol}\n            getOptionLabel={option => `${option.symbol} - ${option.description}`}\n            options={items}\n            onChange={(event, newValue) => {\n              redirect(newValue);\n            }}\n            renderInput={params => (\n              <TextField\n                {...params}\n                label=\"Search for stock, market\"\n                variant=\"outlined\"\n                InputProps={{\n                  ...params.InputProps,\n                }}\n              />\n            )} />\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{ paper: clsx(classes.drawerPaper) }}>\n        <Toolbar />\n        <Divider />\n        <div className={classes.drawerContainer}>\n          <List>{mainListItems}</List>\n        </div>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container className={classes.container}>\n          {props.children}\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 540,\n  },\n}));\n\n\nexport default function CustomGrid(props) {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Paper className={fixedHeightPaper}>\n          {props.children}\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { ResponsiveContainer, Scatter, ScatterChart, Tooltip, XAxis, YAxis } from 'recharts';\nimport { get_dividends_rate, get_peers } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport { CompanyPeers, DividendsRatio } from './models';\nimport CustomGrid from './template/CustomGrid';\nimport { makeStyles, Paper, Slider, Typography } from '@material-ui/core';\n\nexport interface DR extends DividendsRatio{\n  category: string\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n  },\n  input: {\n    width: 42,\n  },\n});\n\nconst INITIAL_LIMITS = [5, 25]\n\nexport default function MarketDividends() {\n  const [dividendRate, setDividendRate] = useState<DR[]>([]);\n  const [peers, setPeers] = useState<CompanyPeers[]>([]);\n  const params: { market: string } = useParams()\n  const classes = useStyles();\n  const [dividendsInterval, setDividendsInterval] = React.useState<number[]>(INITIAL_LIMITS);\n\n  const handleChange = (event: any, newValue: number | number[]) => {\n    setDividendsInterval(newValue as number[]);\n  };\n\n  useEffect(() => {\n    get_dividends_rate(params.market).then(response => {\n      let info = response as DR[]\n      setDividendRate(info)\n    })\n\n    get_peers(params.market).then(response => {\n      let info = response as CompanyPeers[]\n      setPeers(info)\n    })\n  }, [params.market])\n\n  function redirectStock(ev: any) {\n    if (ev?.name !== undefined) {\n      window.location.href = `/#/market/${params.market}/${ev.name}`\n    }\n  }\n\n  useMemo(() => {\n    // add category for companies\n    for (let index = 0; index < dividendRate.length; index++){\n      // find companies and add finnhub industry\n      var peerGroup = peers.find(group => group.group.includes(dividendRate[index].name))\n      \n      if (peerGroup === undefined ){\n        continue\n      }\n\n      var companyAsPeer = peerGroup.peers.find(companyPeer => companyPeer.symbol === dividendRate[index].name)\n\n      if (companyAsPeer === undefined ){\n        continue\n      }\n      dividendRate[index].category = companyAsPeer?.finnhubIndustry\n    }\n\n  }, [dividendRate, peers]);\n\n  return (\n    <CustomGrid>\n      <Title>{params.market} biggest dividends</Title>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <ScatterChart\n          width={400}\n          height={400}\n          margin={{\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 20,\n          }}\n        >\n          <XAxis type=\"category\" dataKey=\"category\" allowDuplicatedCategory={false} />\n          <YAxis type=\"number\" dataKey=\"dividendsRatio\" name=\"ratio\" unit=\"%\" domain={dividendsInterval} allowDataOverflow={true}  />\n          <Tooltip content={<CustomTooltip />} />\n          <Scatter name=\"A school\" data={dividendRate} fill=\"#8884d8\" onClick={ev => redirectStock(ev)}>\n          </Scatter>\n        </ScatterChart>\n      </ResponsiveContainer>\n\n      <div className={classes.root}>\n      <Typography id=\"range-slider\" gutterBottom>\n        Dividends Range\n      </Typography>\n      <Slider\n        value={dividendsInterval}\n        onChange={handleChange}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby=\"range-slider\"\n        getAriaValueText={valuetext}\n      />\n    </div>\n    </CustomGrid>\n  )\n}\n\nfunction CustomTooltip(props: any, aaa: {}) {\n  let a = props as { payload: { payload: { name: string, dividendsRatio: number, category:string } }[] }\n\n  if ((a == null) || (a.payload == null) || (a.payload[0] == null)) {\n    return null\n  }\n  return (\n    <Paper elevation={3} >\n      <p className=\"label\">Name: {`${a.payload[0].payload.name}`}</p>\n      <p className=\"intro\">Dividend/Price ratio: {`${a.payload[0].payload.dividendsRatio.toFixed(1)}%`}</p>\n      <p className=\"intro\">Category: {`${a.payload[0].payload.category}`}</p>\n    </Paper>\n  );\n};\n\nfunction valuetext(value: number) {\n  return `${value}%`;\n}","import React, { useState, useEffect, useMemo } from 'react';\nimport { ResponsiveContainer, Scatter, ScatterChart, Tooltip, XAxis, YAxis } from 'recharts';\nimport { get_peers, get_metrics } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport CustomGrid from './template/CustomGrid';\nimport { CompanyPeers, GeneralMetrics } from './models';\nimport { createStyles, makeStyles, Paper, Slider, Theme, Typography } from '@material-ui/core';\n\n\nexport interface Metrics extends GeneralMetrics {\n  category: string\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: 250,\n    },\n    margin: {\n      height: theme.spacing(3),\n    },\n  }),\n);\n\n// change this dinamically\nconst THRESHOLD = 20\n\nexport default function MarketAnalysis() {\n  const [peRatio, setPeRate] = useState<Metrics[]>([]);\n  const [peers, setPeers] = useState<CompanyPeers[]>([]);\n  const params: { market: string } = useParams()\n  const [limit, setLimit] = useState<number>(THRESHOLD);\n\n  const handleChange = (event: any, value: number | number[]) => {\n    if (typeof (value) === \"number\") {\n      setLimit(value)\n    }\n  };\n\n  useEffect(() => {\n    get_metrics(params.market).then(response => {\n      let info = response as Metrics[]\n      setPeRate(info)\n    })\n\n    get_peers(params.market).then(response => {\n      let info = response as CompanyPeers[]\n      setPeers(info)\n    })\n  }, [params.market])\n\n  function redirectStock(ev: any) {\n    if (ev?.name !== undefined) {\n      window.location.href = `/#/market/${params.market}/${ev.name}`\n    }\n  }\n\n  useMemo(() => {\n    // add category for companies\n    for (let index = 0; index < peRatio.length; index++) {\n      // find companies and add finnhub industry\n      var peerGroup = peers.find(group => group.group.includes(peRatio[index].name))\n\n      if (peerGroup === undefined) {\n        continue\n      }\n\n      var companyAsPeer = peerGroup.peers.find(companyPeer => companyPeer.symbol === peRatio[index].name)\n\n      if (companyAsPeer === undefined) {\n        continue\n      }\n      peRatio[index].category = companyAsPeer?.finnhubIndustry\n    }\n\n  }, [peRatio, peers]);\n\n  const classes = useStyles();\n\n  return (\n    <CustomGrid>\n      <Title>{params.market} smallest P/E</Title>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <ScatterChart\n          width={400}\n          height={400}\n          margin={{\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 20,\n          }}\n        >\n          <XAxis type=\"category\" dataKey=\"category\" allowDuplicatedCategory={false} minTickGap={1}  />\n          <YAxis type=\"number\" dataKey=\"_peNormalizedAnnual\" name=\"ratio\" domain={[0, limit]} allowDataOverflow={true} />\n          <Tooltip content={<CustomTooltip />} />\n          <Scatter name=\"A school\" data={peRatio} fill=\"#8884d8\" onClick={ev => redirectStock(ev)}/>\n        </ScatterChart>\n      </ResponsiveContainer>\n      <div className={classes.root}>\n        <Typography id=\"track-inverted-slider\" gutterBottom>\n          Max P/E ratio\n        </Typography>\n        <Slider\n          track=\"inverted\"\n          aria-labelledby=\"track-inverted-slider\"\n          getAriaValueText={valuetext}\n          value={limit}\n          onChange={handleChange}\n          valueLabelDisplay=\"auto\"\n        />\n      </div>\n    </CustomGrid>\n  )\n}\n\nfunction CustomTooltip(props: any, aaa: {}) {\n  let a = props as { payload: { payload: Metrics }[] }\n\n  if ((a == null) || (a.payload == null) || (a.payload[0] == null)) {\n    return null\n  }\n  return (\n    <Paper elevation={3} >\n      <p className=\"label\">Name: {`${a.payload[0].payload.name}`}</p>\n      <p className=\"intro\">P/E Ratio: {`${a.payload[0].payload._peNormalizedAnnual.toFixed(1)}`}</p>\n      <p className=\"intro\">Gross Margin: {`${a.payload[0].payload._grossMarginTTM.toFixed(2)}%`}</p>\n      <p className=\"intro\">Net Margin: {`${a.payload[0].payload._netProfitMarginTTM.toFixed(2)}%`}</p>\n      <p className=\"intro\">ROE: {`${a.payload[0].payload._roeTTM.toFixed(1)}%`}</p>\n      <p className=\"intro\">Debt Ratio: {`${a.payload[0].payload.debtNetIncomeRatio.toFixed(1)}`}</p>\n      <p className=\"intro\">Category: {`${a.payload[0].payload.category}`}</p>\n    </Paper>\n  );\n};\n\nfunction valuetext(value: number) {\n  return `${value}%`;\n}","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { createStyles, Grid, makeStyles, Paper, Theme, Typography } from '@material-ui/core';\nimport { get_info } from './utils';\nimport { CompanyProfile } from './models';\nimport Title from './template/Title';\n\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        paper: {\n            padding: theme.spacing(1),\n            textAlign: 'center',\n            color: theme.palette.text.secondary,\n        },\n        main: {\n            height: 870,\n            padding: theme.spacing(1),\n            textAlign: 'center',\n            color: theme.palette.text.primary,\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        insights: {\n            height: 274,\n            padding: theme.spacing(1),\n            textAlign: 'center',\n            color: theme.palette.text.primary,\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        container: {\n            paddingBottom: theme.spacing(3),\n            paddingRight: theme.spacing(3)\n        },\n    }),\n);\n\nexport default function Stock() {\n    const params: { market: string, stock: string } = useParams()\n    const [companyProfile, setcompanyProfile] = useState<CompanyProfile>();\n\n    useEffect(() => {\n        get_info(params.market, params.stock).then(response => {\n            let resp = response as CompanyProfile;\n            if (resp !== undefined) {\n                setcompanyProfile(resp)\n            }\n        })\n    }, [params.market, params.stock])\n\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <Grid container direction=\"row\">\n                <Grid item xs={8} className={classes.container}>\n                    <Grid container direction=\"column\">\n                        <Grid item >\n                            <Paper className={classes.main}>\n                                <Title>{params.stock}</Title>\n                                <Typography variant=\"body2\" color=\"inherit\">\n                                    {companyProfile?.description}\n                                </Typography>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <Grid item xs={4}>\n                    <Grid container direction=\"column\" className={classes.container}>\n                        <Grid item >\n                            <Paper className={classes.insights}>\n                                <Title>Balance Sheet insights</Title>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n\n                    <Grid container direction=\"column\" className={classes.container}>\n                        <Grid item >\n                            <Paper className={classes.insights}>\n                                <Title>Income Statement insights</Title>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n\n                    <Grid container direction=\"column\" className={classes.container}>\n                        <Grid item>\n                            <Paper className={classes.insights}>\n                                <Title>Cash Flow insights</Title>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { HashRouter as Router, Switch, Route, } from \"react-router-dom\";\n\nimport Dashboard from './template/Dashboard';\nimport Market from './Market';\nimport DividensChart from './Dividends';\nimport MarketDividends from './MarketDividends';\nimport MarketAnalysis from './MarketAnalysis';\nimport Stock from './Stock';\n\nrender(\n  <React.Fragment>\n    <Dashboard>\n      <Router >\n        <Switch>\n          <Route exact path=\"/market/:market/dividends/:id\" component={DividensChart} />\n          <Route exact path=\"/market/:market\" component={Market} />\n          <Route exact path=\"/market/:market/dividends\" component={MarketDividends} />\n          <Route exact path=\"/market/:market/analysis\" component={MarketAnalysis} />\n          <Route exact path=\"/market/:market/:stock\" component={Stock} />\n        </Switch>\n      </Router>\n    </Dashboard>\n  </React.Fragment>,\n  document.getElementById('root'),\n);","import React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Dividend } from \"./models\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { get_dividends } from './utils';\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport CustomGrid from './template/CustomGrid';\n\nexport default function DividensChart() {\n  const [data, setData] = useState<Dividend[]>([]);\n  const [currency, setCurrency] = useState<string>(\"$\");\n  const params: { market: string, id: string } = useParams()\n  const theme = useTheme()\n\n  useEffect(() => {\n    get_dividends(params.market, params.id).then(response => {\n      let dividends = response as Dividend[]\n      let index = 0\n      while (typeof dividends[index + 1] !== 'undefined') {\n        let currentYear = new Date(dividends[index].date).getFullYear()\n        let nextYear = new Date(dividends[index + 1].date).getFullYear()\n        dividends[index].date = currentYear.toString()\n        if (currentYear === nextYear) {\n          dividends[index].adjustedAmount = dividends[index].adjustedAmount + dividends[index + 1].adjustedAmount\n          dividends.splice(index + 1, 1);\n        }\n        index = index + 1\n      }\n      setData(dividends)\n\n      if (dividends.length > 0) {\n        setCurrency(dividends[0].currency)\n      }\n\n    })\n  }, [params.id, params.market])\n\n\n  return (\n      <CustomGrid>\n        <Title>{params.id} dividends historical</Title>\n        <ResponsiveContainer>\n          <LineChart\n            width={500}\n            height={300}\n            data={data}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5\n            }}\n          >\n            <XAxis dataKey=\"date\" tickFormatter={d => `${new Date(d).getFullYear().toString()}`} stroke={theme.palette.text.secondary} />\n            <YAxis dataKey=\"adjustedAmount\" tickFormatter={d => `${currency} ${d}`} stroke={theme.palette.text.secondary} />\n            <Tooltip />\n            <Legend />\n            <Line\n              type=\"monotone\"\n              dataKey=\"adjustedAmount\"\n              name=\"Dividends\"\n              stroke={theme.palette.primary.main}\n              dot={false}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </CustomGrid>)\n}","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport Title from './template/Title';\nimport CustomGrid from './template/CustomGrid';\nimport { Grid, Link, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport { ResponsiveContainer } from 'recharts';\n\n\nexport default function Market() {\n    const params: { market: string } = useParams()\n\n    return (\n        <CustomGrid>\n            <Title>{params.market} market insights</Title>\n            <ResponsiveContainer>\n                <Grid container >\n                    <Grid item xs>\n                        <ListItem button component={Link} href={`/#/market/${params.market}/dividends`}>\n                            <ListItemIcon>\n                                <MonetizationOnIcon style={{ fontSize: 120 }} />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Dividends\" />\n                        </ListItem>\n                    </Grid >\n                    <Grid item xs>\n                        <ListItem button component={Link} href={`/#/market/${params.market}/analysis`}>\n                            <ListItemIcon>\n                                <TrendingUpIcon style={{ fontSize: 120 }} />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Cheap Value Stocks\" />\n                        </ListItem>\n                    </Grid >\n                </Grid >\n            </ResponsiveContainer>\n        </CustomGrid>)\n}"],"sourceRoot":""}